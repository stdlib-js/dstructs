{"version":3,"file":"index.mjs","sources":["../circular-buffer/lib/main.js","../compact-adjacency-matrix/lib/is_set.js","../compact-adjacency-matrix/lib/bit_value.js","../compact-adjacency-matrix/lib/main.js","../doubly-linked-list/lib/node.js","../doubly-linked-list/lib/main.js","../fifo/lib/node.js","../fifo/lib/main.js","../linked-list/lib/node.js","../linked-list/lib/main.js","../named-typed-tuple/lib/contains.js","../compact-adjacency-matrix/lib/from_adjacency_list_iterator_map.js","../compact-adjacency-matrix/lib/from_adjacency_list_iterator.js","../compact-adjacency-matrix/lib/from_edges_iterator_map.js","../compact-adjacency-matrix/lib/from_edges_iterator.js","../compact-adjacency-matrix/lib/set_bit.js","../compact-adjacency-matrix/lib/clear_bit.js","../named-typed-tuple/lib/validate.js","../named-typed-tuple/lib/ascending.js","../named-typed-tuple/lib/main.js","../named-typed-tuple/lib/has_distinct_elements.js","../named-typed-tuple/lib/from_iterator_map.js","../named-typed-tuple/lib/from_iterator.js","../stack/lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-restricted-syntax, no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert/is-positive-integer';\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from '@stdlib/utils/define-nonenumerable-read-only-accessor';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport MAX_ITERATIONS from '@stdlib/constants/float64/max';\nimport arraylike2object from '@stdlib/array/base/arraylike2object';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Circular buffer constructor.\n*\n* @constructor\n* @param {(PositiveInteger|Collection)} buffer - buffer size or an array-like object to use as the underlying buffer\n* @throws {TypeError} must provide either a valid buffer size or an array-like object\n* @returns {CircularBuffer} circular buffer instance\n*\n* @example\n* var b = new CircularBuffer( 3 );\n*\n* // Fill the buffer...\n* var v = b.push( 'foo' );\n* // returns undefined\n*\n* v = b.push( 'bar' );\n* // returns undefined\n*\n* v = b.push( 'beep' );\n* // returns undefined\n*\n* // Add another value to the buffer and return the removed element:\n* v = b.push( 'boop' );\n* // returns 'foo'\n*/\nfunction CircularBuffer( buffer ) {\n\tvar buf;\n\tvar i;\n\tif ( !(this instanceof CircularBuffer) ) {\n\t\treturn new CircularBuffer( buffer );\n\t}\n\tif ( isPositiveInteger( buffer ) ) {\n\t\tbuf = [];\n\t\tfor ( i = 0; i < buffer; i++ ) {\n\t\t\tbuf.push( 0.0 ); // initialize with zeros, but could be any value (we're just ensuring a contiguous block of memory)\n\t\t}\n\t} else if ( isCollection( buffer ) ) {\n\t\tbuf = buffer;\n\t} else {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide either a valid buffer size (i.e., a positive integer) or an array-like object which can serve as the underlying buffer. Value: `%s`.', buffer ) );\n\t}\n\tthis._buffer = arraylike2object( buf );\n\tthis._length = buf.length;\n\tthis._count = 0;\n\tthis._i = -1;\n\treturn this;\n}\n\n/**\n* Clears the buffer.\n*\n* @name clear\n* @memberof CircularBuffer.prototype\n* @type {Function}\n* @returns {CircularBuffer} circular buffer instance\n*\n* @example\n* var b = new CircularBuffer( 2 );\n*\n* // Add values to the buffer:\n* b.push( 'foo' );\n* b.push( 'bar' );\n* b.push( 'beep' );\n* b.push( 'boop' );\n*\n* // Get the number of elements currently in the buffer:\n* var n = b.count;\n* // returns 2\n*\n* // Clear the buffer:\n* b.clear();\n*\n* // Get the number of buffer values:\n* n = b.count;\n* // returns 0\n*/\nsetReadOnly( CircularBuffer.prototype, 'clear', function clear() {\n\tthis._count = 0;\n\tthis._i = -1; // this ensures that we always fill the buffer starting at index `0`.\n\treturn this;\n});\n\n/**\n* Number of elements currently in the buffer.\n*\n* @name count\n* @memberof CircularBuffer.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var b = new CircularBuffer( 4 );\n*\n* // Get the value count:\n* var n = b.count;\n* // returns 0\n*\n* // Add values to the buffer:\n* b.push( 'foo' );\n* b.push( 'bar' );\n*\n* // Get the value count:\n* n = b.count;\n* // returns 2\n*/\nsetReadOnlyAccessor( CircularBuffer.prototype, 'count', function get() {\n\treturn this._count;\n});\n\n/**\n* Boolean indicating whether a circular buffer is full.\n*\n* @name full\n* @memberof CircularBuffer.prototype\n* @readonly\n* @type {boolean}\n*\n* @example\n* var b = new CircularBuffer( 3 );\n*\n* // Determine if the buffer is full:\n* var bool = b.full;\n* // returns false\n*\n* // Add values to the buffer:\n* b.push( 'foo' );\n* b.push( 'bar' );\n* b.push( 'beep' );\n* b.push( 'boop' );\n*\n* // Determine if the buffer is full:\n* bool = b.full;\n* // returns true\n*/\nsetReadOnlyAccessor( CircularBuffer.prototype, 'full', function get() {\n\treturn this._count === this._length;\n});\n\n/**\n* Returns an iterator for iterating over a circular buffer.\n*\n* ## Notes\n*\n* -   An iterator does not iterate over partially full buffers.\n*\n* @name iterator\n* @memberof CircularBuffer.prototype\n* @type {Function}\n* @param {NonNegativeInteger} [niters] - number of iterations\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {Iterator} iterator\n*\n* @example\n* var b = new CircularBuffer( 3 );\n*\n* // Add values to the buffer:\n* b.push( 'foo' );\n* b.push( 'bar' );\n* b.push( 'beep' );\n* b.push( 'boop' );\n*\n* // Create an iterator:\n* var it = b.iterator( b.length );\n*\n* // Iterate over the buffer...\n* var v = it.next().value;\n* // returns 'bar'\n*\n* v = it.next().value;\n* // returns 'beep'\n*\n* v = it.next().value;\n* // returns 'boop'\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( CircularBuffer.prototype, 'iterator', function iterator( niters ) {\n\tvar iter;\n\tvar self;\n\tvar FLG;\n\tvar N;\n\tvar n;\n\tvar i;\n\n\tif ( arguments.length ) {\n\t\tif ( !isNonNegativeInteger( niters ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', niters ) );\n\t\t}\n\t\tN = niters;\n\t} else {\n\t\tN = MAX_ITERATIONS;\n\t}\n\tself = this;\n\n\t// Initialize the iteration index and counter:\n\ti = this._i;\n\tn = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\t/* eslint-disable no-underscore-dangle */\n\t\tn += 1;\n\t\tif ( FLG || n > N ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\t// If the buffer is only partially full, don't allow iteration over \"undefined\" elements (this ensures similar behavior with `toArray()`)...\n\t\tif ( self._count !== self._length ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\ti = (i+1) % self._length;\n\t\treturn {\n\t\t\t'value': self._buffer.accessors[ 0 ]( self._buffer.data, i ),\n\t\t\t'done': false\n\t\t};\n\n\t\t/* eslint-enable no-underscore-dangle */\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.iterator( N );\n\t}\n});\n\n/**\n* Circular buffer length (i.e., capacity).\n*\n* @name length\n* @memberof CircularBuffer.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var b = new CircularBuffer( 4 );\n*\n* // Get the buffer capacity:\n* var len = b.length;\n* // returns 4\n*/\nsetReadOnlyAccessor( CircularBuffer.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Adds a value to the circular buffer.\n*\n* @name push\n* @memberof CircularBuffer.prototype\n* @type {Function}\n* @param {*} value - value to add\n* @returns {(*|void)} removed element or undefined\n*\n* @example\n* var b = new CircularBuffer( 3 );\n*\n* // Fill the buffer:\n* var v = b.push( 'foo' );\n* // returns undefined\n*\n* v = b.push( 'bar' );\n* // returns undefined\n*\n* v = b.push( 'beep' );\n* // returns undefined\n*\n* // Add another value to the buffer and return the removed element:\n* v = b.push( 'boop' );\n* // returns 'foo'\n*/\nsetReadOnly( CircularBuffer.prototype, 'push', function push( value ) {\n\tvar set;\n\tvar get;\n\tvar buf;\n\tvar v;\n\n\tbuf = this._buffer.data;\n\tget = this._buffer.accessors[ 0 ];\n\tset = this._buffer.accessors[ 1 ];\n\n\t// Compute the next buffer index:\n\tthis._i = (this._i+1) % this._length;\n\n\t// Check if we are still filling the buffer...\n\tif ( this._count < this._length ) {\n\t\tset( buf, this._i, value );\n\t\tthis._count += 1;\n\t\treturn;\n\t}\n\t// Replace an existing buffer element...\n\tv = get( buf, this._i );\n\tset( buf, this._i, value );\n\treturn v;\n});\n\n/**\n* Returns an array of circular buffer values.\n*\n* @name toArray\n* @memberof CircularBuffer.prototype\n* @type {Function}\n* @returns {Array} circular buffer values\n*\n* @example\n* var b = new CircularBuffer( 3 );\n*\n* // Add values to the buffer:\n* b.push( 'foo' );\n* b.push( 'bar' );\n* b.push( 'beep' );\n* b.push( 'boop' );\n*\n* // Get an array of buffer values:\n* var vals = b.toArray();\n* // returns [ 'bar', 'beep', 'boop' ]\n*/\nsetReadOnly( CircularBuffer.prototype, 'toArray', function toArray() {\n\tvar buf;\n\tvar get;\n\tvar out;\n\tvar k;\n\tvar i;\n\n\tbuf = this._buffer.data;\n\tget = this._buffer.accessors[ 0 ];\n\n\tout = [];\n\tfor ( i = 1; i <= this._count; i++ ) {\n\t\t// Note: in a full buffer, `count == length`; in a partially full buffer, we need to ensure we always start at index `0`\n\t\tk = (this._i+i) % this._count;\n\t\tout.push( get( buf, k ) );\n\t}\n\treturn out;\n});\n\n/**\n* Serializes a circular buffer as JSON.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `CircularBuffer` instance.\n*\n* @name toJSON\n* @memberof CircularBuffer.prototype\n* @type {Function}\n* @returns {Object} serialized circular buffer\n*\n* @example\n* var b = new CircularBuffer( 3 );\n*\n* // Add values to the buffer:\n* b.push( 'foo' );\n* b.push( 'bar' );\n* b.push( 'beep' );\n* b.push( 'boop' );\n*\n* // Serialize to JSON:\n* var o = b.toJSON();\n* // returns { 'type': 'circular-buffer', 'length': 3, 'data': [ 'bar', 'beep', 'boop' ] }\n*/\nsetReadOnly( CircularBuffer.prototype, 'toJSON', function toJSON() {\n\tvar out = {};\n\tout.type = 'circular-buffer';\n\tout.length = this._length;\n\tout.data = this.toArray();\n\treturn out;\n});\n\n\n// EXPORTS //\n\nexport default CircularBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Boolean from '@stdlib/boolean/ctor';\n\n\n// MAIN //\n\n/**\n* Checks whether a bit is set.\n*\n* @private\n* @param {integer32} value - integer value\n* @param {NonNegativeInteger} i - bit to check\n* @returns {boolean} boolean indicating whether a bit is set\n*\n* @example\n* var bool = isSet( 4, 2 );\n* // returns true\n*\n* bool = isSet( 4, 0 );\n* // returns false\n*/\nfunction isSet( value, i ) {\n\treturn Boolean( ( value >> i ) & 1 );\n}\n\n\n// EXPORTS //\n\nexport default isSet;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the value (either `0` or `1`) of a specified bit.\n*\n* @private\n* @param {integer32} value - integer value\n* @param {NonNegativeInteger} i - bit number\n* @returns {NonNegativeInteger} bit value\n*\n* @example\n* var b = bitValue( 4, 2 );\n* // returns 1\n*\n* b = bitValue( 4, 0 );\n* // returns 0\n*/\nfunction bitValue( value, i ) {\n\treturn ( value >> i ) & 1;\n}\n\n\n// EXPORTS //\n\nexport default bitValue;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-restricted-syntax, no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNonNegativeInteger } from '@stdlib/assert/is-nonnegative-integer';\nimport isArrayLikeObject from '@stdlib/assert/is-array-like-object';\nimport isCollection from '@stdlib/assert/is-collection';\nimport isFunction from '@stdlib/assert/is-function';\nimport isObject from '@stdlib/assert/is-object';\nimport hasIteratorSymbolSupport from '@stdlib/assert/has-iterator-symbol-support';\nimport ITERATOR_SYMBOL from '@stdlib/symbol/iterator';\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from '@stdlib/utils/define-nonenumerable-read-only-accessor';\nimport Int32Array from '@stdlib/array/int32';\nimport Int8Array from '@stdlib/array/int8';\nimport format from '@stdlib/string/format';\nimport ceil from '@stdlib/math/base/special/ceil';\nimport floor from '@stdlib/math/base/special/floor';\nimport grev from '@stdlib/blas/ext/base/grev';\nimport fromIteratorAdjList from './from_adjacency_list_iterator.js';\nimport fromIteratorAdjListMap from './from_adjacency_list_iterator_map.js';\nimport fromIteratorEdges from './from_edges_iterator.js';\nimport fromIteratorEdgesMap from './from_edges_iterator_map.js';\nimport setBit from './set_bit.js';\nimport clearBit from './clear_bit.js';\nimport isSet from './is_set.js';\nimport bitValue from './bit_value.js';\n\n\n// VARIABLES //\n\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\nvar NBITS = Int32Array.BYTES_PER_ELEMENT * 8; // 8 bits per byte\n\n\n// MAIN //\n\n/**\n* Compact adjacency matrix constructor.\n*\n* @constructor\n* @param {NonNegativeInteger} N - number of vertices\n* @throws {TypeError} must provide a nonnegative integer\n* @returns {CompactAdjacencyMatrix} adjacency matrix instance\n*\n* @example\n* var adj = new CompactAdjacencyMatrix( 4 );\n* // returns <CompactAdjacencyMatrix>\n*\n* adj.addEdge( 0, 1 );\n* adj.addEdge( 0, 2 );\n* adj.addEdge( 1, 2 );\n* adj.addEdge( 2, 3 );\n*/\nfunction CompactAdjacencyMatrix( N ) {\n\tif ( !( this instanceof CompactAdjacencyMatrix ) ) {\n\t\treturn new CompactAdjacencyMatrix( N );\n\t}\n\tif ( !isNonNegativeInteger( N ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', N ) );\n\t}\n\tthis._N = N; // number of vertices\n\tthis._M = 0; // number of edges\n\tthis._buffer = new Int32Array( ceil( N*N/NBITS ) ); // square matrix\n\treturn this;\n}\n\n/**\n* Creates a compact adjacency matrix from an adjacency list.\n*\n* @name fromAdjacencyList\n* @memberof CompactAdjacencyMatrix\n* @type {Function}\n* @param {(ArrayLikeObject|Iterable)} list - adjacency list\n* @param {Function} [clbk] - callback to invoke for each list element\n* @param {*} [thisArg] - context\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a compact adjacency matrix\n* @throws {TypeError} first argument must be an array-like object or an iterable\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} each element of a provided adjacency list must be an array-like object\n* @throws {TypeError} an iterator must return an array-like object containing vertices\n* @throws {TypeError} when provided an iterator, a callback must return an array-like object containing vertices\n* @returns {CompactAdjacencyMatrix} adjacency matrix instance\n*\n* @example\n* var list = [ [ 1, 2 ], [ 2 ], [ 3 ], [] ];\n*\n* var adj = CompactAdjacencyMatrix.fromAdjacencyList( list );\n* // returns <CompactAdjacencyMatrix>\n*\n* var bool = adj.hasEdge( 0, 1 );\n* // returns true\n*\n* bool = adj.hasEdge( 0, 2 );\n* // returns true\n*\n* bool = adj.hasEdge( 1, 2 );\n* // returns true\n*\n* bool = adj.hasEdge( 2, 3 );\n* // returns true\n*/\nsetReadOnly( CompactAdjacencyMatrix, 'fromAdjacencyList', function fromAdjacencyList( list ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar edges;\n\tvar clbk;\n\tvar adj;\n\tvar tmp;\n\tvar len;\n\tvar N;\n\tvar i;\n\tvar j;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( this !== CompactAdjacencyMatrix ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a compact adjacency matrix.' );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs > 1 ) {\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tif ( nargs > 2 ) {\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tif ( isArrayLikeObject( list ) ) {\n\t\tN = list.length;\n\t\tadj = new this( N );\n\t\tif ( clbk ) {\n\t\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\t\tedges = clbk.call( thisArg, list[ i ], i );\n\t\t\t\tif ( !isCollection( edges ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return an array-like object. Value: `%s`.', edges ) );\n\t\t\t\t}\n\t\t\t\tfor ( j = 0; j < edges.length; j++ ) {\n\t\t\t\t\tadj.addEdge( i, edges[ j ] );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn adj;\n\t\t}\n\t\tfor ( i = 0; i < N; i++ ) {\n\t\t\tedges = list[ i ];\n\t\t\tif ( !isCollection( edges ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Each element of the adjacency list must be an array-like object. Value: `%s`.', list ) );\n\t\t\t}\n\t\t\tfor ( j = 0; j < edges.length; j++ ) {\n\t\t\t\tadj.addEdge( i, edges[ j ] );\n\t\t\t}\n\t\t}\n\t\treturn adj;\n\t}\n\tif ( isObject( list ) && HAS_ITERATOR_SYMBOL && isFunction( list[ ITERATOR_SYMBOL ] ) ) { // eslint-disable-line max-len\n\t\ttmp = list[ ITERATOR_SYMBOL ]();\n\t\tif ( !isFunction( tmp.next ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', list ) );\n\t\t}\n\t\tif ( clbk ) {\n\t\t\ttmp = fromIteratorAdjListMap( tmp, clbk, thisArg );\n\t\t} else {\n\t\t\ttmp = fromIteratorAdjList( tmp );\n\t\t}\n\t\tif ( tmp instanceof Error ) {\n\t\t\tthrow tmp;\n\t\t}\n\t\tlen = tmp.length;\n\t\tadj = new this( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tedges = tmp[ i ];\n\t\t\tfor ( j = 0; j < edges.length; j++ ) {\n\t\t\t\tadj.addEdge( i, edges[ j ] );\n\t\t\t}\n\t\t}\n\t\treturn adj;\n\t}\n\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', list ) );\n});\n\n/**\n* Creates a compact adjacency matrix from a list of edges.\n*\n* @name fromEdges\n* @memberof CompactAdjacencyMatrix\n* @type {Function}\n* @param {NonNegativeInteger} N - number of vertices\n* @param {(ArrayLikeObject|Iterable)} edges - list of edges\n* @param {Function} [clbk] - callback to invoke for each list element\n* @param {*} [thisArg] - context\n* @throws {TypeError} `this` context must be a constructor\n* @throws {TypeError} `this` must be a compact adjacency matrix\n* @throws {TypeError} first argument must be a nonnegative integer\n* @throws {TypeError} second argument must be an array-like object\n* @throws {TypeError} third argument must be a function\n* @throws {TypeError} each element of a provided list of edges must be a two-element array-like object containing vertices\n* @throws {TypeError} an iterator must return a two-element array-like object containing vertices\n* @throws {TypeError} when provided an iterator, a callback must return a two-element array-like object containing vertices\n* @returns {CompactAdjacencyMatrix} adjacency matrix instance\n*\n* @example\n* var edges = [ [ 0, 1 ], [ 0, 2 ], [ 1, 2 ], [ 2, 3 ] ];\n*\n* var adj = CompactAdjacencyMatrix.fromEdges( 4, edges );\n* // returns <CompactAdjacencyMatrix>\n*\n* var bool = adj.hasEdge( 0, 1 );\n* // returns true\n*\n* bool = adj.hasEdge( 0, 2 );\n* // returns true\n*\n* bool = adj.hasEdge( 1, 2 );\n* // returns true\n*\n* bool = adj.hasEdge( 2, 3 );\n* // returns true\n*/\nsetReadOnly( CompactAdjacencyMatrix, 'fromEdges', function fromEdges( N, edges ) {\n\tvar thisArg;\n\tvar nargs;\n\tvar clbk;\n\tvar edge;\n\tvar adj;\n\tvar tmp;\n\tvar len;\n\tvar i;\n\tif ( !isFunction( this ) ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` context must be a constructor.' );\n\t}\n\tif ( this !== CompactAdjacencyMatrix ) {\n\t\tthrow new TypeError( 'invalid invocation. `this` is not a compact adjacency matrix.' );\n\t}\n\tnargs = arguments.length;\n\tif ( nargs > 2 ) {\n\t\tclbk = arguments[ 2 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\tif ( nargs > 3 ) {\n\t\t\tthisArg = arguments[ 3 ];\n\t\t}\n\t}\n\tif ( !isNonNegativeInteger( N ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a nonnegative integer. Value: `%s`.', N ) );\n\t}\n\tif ( isArrayLikeObject( edges ) ) {\n\t\tif ( clbk ) {\n\t\t\tadj = new this( N );\n\t\t\tfor ( i = 0; i < edges.length; i++ ) {\n\t\t\t\tedge = clbk.call( thisArg, edges[ i ], i );\n\t\t\t\tif ( !isArrayLikeObject( edge ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback must return an array-like object. Value: `%s`.', edge ) );\n\t\t\t\t}\n\t\t\t\tadj.addEdge( edge[ 0 ], edge[ 1 ] );\n\t\t\t}\n\t\t\treturn adj;\n\t\t}\n\t\tadj = new this( N );\n\t\tfor ( i = 0; i < edges.length; i++ ) {\n\t\t\tedge = edges[ i ];\n\t\t\tif ( !isArrayLikeObject( edge ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Each element of the edge list must be an array-like object. Value: `%s`.', edge ) );\n\t\t\t}\n\t\t\tadj.addEdge( edge[ 0 ], edge[ 1 ] );\n\t\t}\n\t\treturn adj;\n\t}\n\n\tif ( isObject( edges ) && HAS_ITERATOR_SYMBOL && isFunction( edges[ ITERATOR_SYMBOL ] ) ) { // eslint-disable-line max-len\n\t\ttmp = edges[ ITERATOR_SYMBOL ]();\n\t\tif ( !isFunction( tmp.next ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', edges ) );\n\t\t}\n\t\tif ( clbk ) {\n\t\t\ttmp = fromIteratorEdgesMap( tmp, clbk, thisArg );\n\t\t} else {\n\t\t\ttmp = fromIteratorEdges( tmp );\n\t\t}\n\t\tif ( tmp instanceof Error ) {\n\t\t\tthrow tmp;\n\t\t}\n\t\tlen = tmp.length;\n\t\tadj = new this( len/2 );\n\t\tfor ( i = 0; i < len; i += 2 ) {\n\t\t\tadj.addEdge( tmp[ i ], tmp[ i+1 ] );\n\t\t}\n\t\treturn adj;\n\t}\n\tthrow new TypeError( format( 'invalid argument. Second argument must be an array-like object or an iterable. Value: `%s`.', edges ) );\n});\n\n/**\n* Returns indices (\"bucket\" and bit offset) for an `(i,j)` vertex pair.\n*\n* @private\n* @name _loc\n* @memberof CompactAdjacencyMatrix.prototype\n* @type {Function}\n* @param {NonNegativeInteger} i - starting vertex\n* @param {NonNegativeInteger} j - ending vertex\n* @param {Array} out - output array\n* @throws {TypeError} first argument must be a nonnegative integer\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {RangeError} first argument must not exceed matrix dimensions\n* @throws {RangeError} second argument must not exceed matrix dimensions\n* @returns {Array} output array\n*/\nsetReadOnly( CompactAdjacencyMatrix.prototype, '_loc', function loc( i, j, out ) {\n\tvar bucket;\n\tvar bit;\n\tvar idx;\n\n\t// Compute a strided index for the desired bit:\n\tidx = ( i*this._N ) + j;\n\n\t// Compute the index of the buffer element (bucket) containing the bit:\n\tbucket = floor( idx / NBITS );\n\n\t// Compute the bit offset:\n\tbit = idx - ( bucket*NBITS );\n\n\t// Set the output values:\n\tout[ 0 ] = bucket;\n\tout[ 1 ] = bit;\n\n\treturn out;\n});\n\n/**\n* Adds a directed edge between two vertices.\n*\n* @name addEdge\n* @memberof CompactAdjacencyMatrix.prototype\n* @type {Function}\n* @param {NonNegativeInteger} i - starting vertex\n* @param {NonNegativeInteger} j - ending vertex\n* @throws {TypeError} first argument must be a nonnegative integer\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {RangeError} first argument must not exceed matrix dimensions\n* @throws {RangeError} second argument must not exceed matrix dimensions\n* @returns {CompactAdjacencyMatrix} adjacency matrix instance\n*\n* @example\n* var adj = new CompactAdjacencyMatrix( 4 );\n* // returns <CompactAdjacencyMatrix>\n*\n* adj.addEdge( 0, 1 );\n* adj.addEdge( 0, 2 );\n* adj.addEdge( 1, 2 );\n* adj.addEdge( 2, 3 );\n*/\nsetReadOnly( CompactAdjacencyMatrix.prototype, 'addEdge', function addEdge( i, j ) {\n\tvar idx;\n\tif ( !isNonNegativeInteger( i ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a nonnegative integer. Value: `%s`.', i ) );\n\t}\n\tif ( !isNonNegativeInteger( j ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', j ) );\n\t}\n\tif ( i >= this._N ) {\n\t\tthrow new RangeError( format( 'invalid argument. First argument exceeds matrix dimensions. Value: `%u`.', i ) );\n\t}\n\tif ( j >= this._N ) {\n\t\tthrow new RangeError( format( 'invalid argument. Second argument exceeds matrix dimensions. Value: `%u`.', j ) );\n\t}\n\t// Resolve the `(i,j)` pair:\n\tidx = this._loc( i, j, [ 0, 0 ] );\n\n\t// Set the bit for the edge:\n\tif ( isSet( this._buffer[ idx[0] ], idx[1] ) === false ) {\n\t\tthis._buffer[ idx[0] ] = setBit( this._buffer[ idx[0] ], idx[1] );\n\t\tthis._M += 1;\n\t}\n\treturn this;\n});\n\n/**\n* Returns the list of all edges.\n*\n* @name edges\n* @memberof CompactAdjacencyMatrix.prototype\n* @type {Array}\n*\n* @example\n* var adj = new CompactAdjacencyMatrix( 4 );\n* // returns <CompactAdjacencyMatrix>\n*\n* adj.addEdge( 0, 1 );\n* adj.addEdge( 0, 2 );\n* adj.addEdge( 1, 2 );\n* adj.addEdge( 2, 3 );\n*\n* var edges = adj.edges;\n* // returns [ [ 0, 1 ], [ 0, 2 ], [ 1, 2 ], [ 2, 3 ] ]\n*/\nsetReadOnlyAccessor( CompactAdjacencyMatrix.prototype, 'edges', function edges() {\n\tvar edges;\n\tvar idx;\n\tvar i;\n\tvar j;\n\n\tedges = [];\n\tidx = [ 0, 0 ];\n\tfor ( i = 0; i < this._N; i++ ) {\n\t\tfor ( j = 0; j < this._N; j++ ) {\n\t\t\t// Resolve the `(i,j)` pair:\n\t\t\tidx = this._loc( i, j, idx );\n\n\t\t\t// Check for an edge:\n\t\t\tif ( isSet( this._buffer[ idx[0] ], idx[1] ) ) {\n\t\t\t\tedges.push( [ i, j ] );\n\t\t\t}\n\t\t}\n\t}\n\treturn edges;\n});\n\n/**\n* Checks whether a directed edge exists between two vertices.\n*\n* @name hasEdge\n* @memberof CompactAdjacencyMatrix.prototype\n* @type {Function}\n* @param {NonNegativeInteger} i - starting vertex\n* @param {NonNegativeInteger} j - ending vertex\n* @throws {TypeError} first argument must be a nonnegative integer\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {RangeError} first argument must not exceed matrix dimensions\n* @throws {RangeError} second argument must not exceed matrix dimensions\n* @returns {boolean} boolean indicating if an edge exists\n*\n* @example\n* var adj = new CompactAdjacencyMatrix( 4 );\n* // returns <CompactAdjacencyMatrix>\n*\n* adj.addEdge( 0, 1 );\n* adj.addEdge( 0, 2 );\n* adj.addEdge( 1, 2 );\n* adj.addEdge( 2, 3 );\n*\n* // ...\n*\n* var bool = adj.hasEdge( 0, 1 );\n* // returns true\n*\n* bool = adj.hasEdge( 0, 2 );\n* // returns true\n*\n* bool = adj.hasEdge( 1, 2 );\n* // returns true\n*\n* bool = adj.hasEdge( 2, 3 );\n* // returns true\n*\n* bool = adj.hasEdge( 1, 3 );\n* // returns false\n*/\nsetReadOnly( CompactAdjacencyMatrix.prototype, 'hasEdge', function hasEdge( i, j ) {\n\tvar idx;\n\tif ( !isNonNegativeInteger( i ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a nonnegative integer. Value: `%s`.', i ) );\n\t}\n\tif ( !isNonNegativeInteger( j ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', j ) );\n\t}\n\tif ( i >= this._N ) {\n\t\tthrow new RangeError( format( 'invalid argument. First argument exceeds matrix dimensions. Value: `%u`.', i ) );\n\t}\n\tif ( j >= this._N ) {\n\t\tthrow new RangeError( format( 'invalid argument. Second argument exceeds matrix dimensions. Value: `%u`.', j ) );\n\t}\n\t// Resolve the `(i,j)` pair:\n\tidx = this._loc( i, j, [ 0, 0 ] );\n\n\t// Check for an edge:\n\treturn isSet( this._buffer[ idx[0] ], idx[1] );\n});\n\n/**\n* Returns the indegree of a vertex (i.e., number of edges ending at a vertex).\n*\n* @name inDegree\n* @memberof CompactAdjacencyMatrix.prototype\n* @type {Function}\n* @param {NonNegativeInteger} j - vertex\n* @throws {TypeError} must provide a nonnegative integer\n* @throws {RangeError} must not exceed matrix dimensions\n* @returns {NonNegativeInteger} indegree\n*\n* @example\n* var adj = new CompactAdjacencyMatrix( 4 );\n* // returns <CompactAdjacencyMatrix>\n*\n* adj.addEdge( 0, 1 );\n* adj.addEdge( 0, 2 );\n* adj.addEdge( 1, 2 );\n* adj.addEdge( 2, 3 );\n*\n* var d = adj.inDegree( 2 );\n* // returns 2\n*\n* d = adj.inDegree( 3 );\n* // returns 1\n*/\nsetReadOnly( CompactAdjacencyMatrix.prototype, 'inDegree', function inDegree( j ) {\n\tvar deg;\n\tvar idx;\n\tvar i;\n\tif ( !isNonNegativeInteger( j ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', j ) );\n\t}\n\tif ( j >= this._N ) {\n\t\tthrow new RangeError( format( 'invalid argument. Vertex cannot exceed matrix dimensions. Value: `%u`.', j ) );\n\t}\n\t// Iterate over the rows and add up the number of edges...\n\tdeg = 0;\n\tidx = [ 0, 0 ];\n\tfor ( i = 0; i < this._N; i++ ) {\n\t\t// Resolve the `(i,j)` pair:\n\t\tidx = this._loc( i, j, idx );\n\n\t\t// Check for an edge:\n\t\tdeg += bitValue( this._buffer[ idx[0] ], idx[1] );\n\t}\n\treturn deg;\n});\n\n/**\n* Returns a list of vertices having edges ending at a specified vertex.\n*\n* @name inEdges\n* @memberof CompactAdjacencyMatrix.prototype\n* @type {Function}\n* @param {NonNegativeInteger} j - vertex\n* @throws {TypeError} must provide a nonnegative integer\n* @throws {RangeError} must not exceed matrix dimensions\n* @returns {Array} list of vertices\n*\n* @example\n* var adj = new CompactAdjacencyMatrix( 4 );\n* // returns <CompactAdjacencyMatrix>\n*\n* adj.addEdge( 0, 1 );\n* adj.addEdge( 0, 2 );\n* adj.addEdge( 1, 2 );\n* adj.addEdge( 2, 3 );\n*\n* var e = adj.inEdges( 2 );\n* // returns [ 0, 1 ]\n*\n* e = adj.inEdges( 3 );\n* // returns [ 2 ]\n*/\nsetReadOnly( CompactAdjacencyMatrix.prototype, 'inEdges', function inEdges( j ) {\n\tvar edges;\n\tvar idx;\n\tvar i;\n\tif ( !isNonNegativeInteger( j ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', j ) );\n\t}\n\tif ( j >= this._N ) {\n\t\tthrow new RangeError( format( 'invalid argument. Vertex cannot exceed matrix dimensions. Value: `%u`.', j ) );\n\t}\n\t// Iterate over the rows and retrieve edges...\n\tedges = [];\n\tidx = [ 0, 0 ];\n\tfor ( i = 0; i < this._N; i++ ) {\n\t\t// Resolve the `(i,j)` pair:\n\t\tidx = this._loc( i, j, idx );\n\n\t\t// Check for an edge:\n\t\tif ( isSet( this._buffer[ idx[0] ], idx[1] ) ) {\n\t\t\tedges.push( i );\n\t\t}\n\t}\n\treturn edges;\n});\n\n/**\n* Returns the total number of edges.\n*\n* @name nedges\n* @memberof CompactAdjacencyMatrix.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var adj = new CompactAdjacencyMatrix( 4 );\n* // returns <CompactAdjacencyMatrix>\n*\n* // ...\n*\n* adj.addEdge( 0, 1 );\n* adj.addEdge( 0, 2 );\n* adj.addEdge( 1, 2 );\n*\n* // ...\n*\n* var M = adj.nedges;\n* // returns 3\n*/\nsetReadOnlyAccessor( CompactAdjacencyMatrix.prototype, 'nedges', function nedges() {\n\treturn this._M;\n});\n\n/**\n* Returns the number of vertices.\n*\n* @name nvertices\n* @memberof CompactAdjacencyMatrix.prototype\n* @readonly\n* @type {NonNegativeInteger}\n*\n* @example\n* var adj = new CompactAdjacencyMatrix( 4 );\n* // returns <CompactAdjacencyMatrix>\n*\n* // ...\n*\n* var N = adj.nvertices;\n* // returns 4\n*/\nsetReadOnlyAccessor( CompactAdjacencyMatrix.prototype, 'nvertices', function nvertices() {\n\treturn this._N;\n});\n\n/**\n* Returns the outdegree of a vertex (i.e., number of edges starting from a vertex).\n*\n* @name outDegree\n* @memberof CompactAdjacencyMatrix.prototype\n* @type {Function}\n* @param {NonNegativeInteger} i - vertex\n* @throws {TypeError} must provide a nonnegative integer\n* @throws {RangeError} must not exceed matrix dimensions\n* @returns {NonNegativeInteger} outdegree\n*\n* @example\n* var adj = new CompactAdjacencyMatrix( 4 );\n* // returns <CompactAdjacencyMatrix>\n*\n* adj.addEdge( 0, 1 );\n* adj.addEdge( 0, 2 );\n* adj.addEdge( 1, 2 );\n* adj.addEdge( 2, 3 );\n*\n* var d = adj.outDegree( 2 );\n* // returns 1\n*\n* d = adj.outDegree( 0 );\n* // returns 2\n*/\nsetReadOnly( CompactAdjacencyMatrix.prototype, 'outDegree', function outDegree( i ) {\n\tvar deg;\n\tvar idx;\n\tvar j;\n\tif ( !isNonNegativeInteger( i ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', i ) );\n\t}\n\tif ( i >= this._N ) {\n\t\tthrow new RangeError( format( 'invalid argument. Vertex cannot exceed matrix dimensions. Value: `%u`.', i ) );\n\t}\n\t// Iterate over the columns and add up the number of edges...\n\tdeg = 0;\n\tidx = [ 0, 0 ];\n\tfor ( j = 0; j < this._N; j++ ) {\n\t\t// Resolve the `(i,j)` pair:\n\t\tidx = this._loc( i, j, idx );\n\n\t\t// Check for an edge:\n\t\tdeg += bitValue( this._buffer[ idx[0] ], idx[1] );\n\t}\n\treturn deg;\n});\n\n/**\n* Returns a list of vertices having edges starting at a specified vertex.\n*\n* @name outEdges\n* @memberof CompactAdjacencyMatrix.prototype\n* @type {Function}\n* @param {NonNegativeInteger} i - vertex\n* @throws {TypeError} must provide a nonnegative integer\n* @throws {RangeError} must not exceed matrix dimensions\n* @returns {Array} list of vertices\n*\n* @example\n* var adj = new CompactAdjacencyMatrix( 4 );\n* // returns <CompactAdjacencyMatrix>\n*\n* adj.addEdge( 0, 1 );\n* adj.addEdge( 0, 2 );\n* adj.addEdge( 1, 2 );\n* adj.addEdge( 2, 3 );\n*\n* var e = adj.outEdges( 2 );\n* // returns [ 3 ]\n*\n* e = adj.outEdges( 0 );\n* // returns [ 1, 2 ]\n*/\nsetReadOnly( CompactAdjacencyMatrix.prototype, 'outEdges', function outEdges( i ) {\n\tvar edges;\n\tvar idx;\n\tvar j;\n\tif ( !isNonNegativeInteger( i ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a nonnegative integer. Value: `%s`.', i ) );\n\t}\n\tif ( i >= this._N ) {\n\t\tthrow new RangeError( format( 'invalid argument. Vertex cannot exceed matrix dimensions. Value: `%u`.', i ) );\n\t}\n\t// Iterate over the rows and retrieve edges...\n\tedges = [];\n\tidx = [ 0, 0 ];\n\tfor ( j = 0; j < this._N; j++ ) {\n\t\t// Resolve the `(i,j)` pair:\n\t\tidx = this._loc( i, j, idx );\n\n\t\t// Check for an edge:\n\t\tif ( isSet( this._buffer[ idx[0] ], idx[1] ) ) {\n\t\t\tedges.push( j );\n\t\t}\n\t}\n\treturn edges;\n});\n\n/**\n* Removes a directed edge between two vertices.\n*\n* @name removeEdge\n* @memberof CompactAdjacencyMatrix.prototype\n* @type {Function}\n* @param {NonNegativeInteger} i - starting vertex\n* @param {NonNegativeInteger} j - ending vertex\n* @throws {TypeError} first argument must be a nonnegative integer\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {RangeError} first argument must not exceed matrix dimensions\n* @throws {RangeError} second argument must not exceed matrix dimensions\n* @returns {CompactAdjacencyMatrix} adjacency matrix instance\n*\n* @example\n* var adj = new CompactAdjacencyMatrix( 4 );\n* // returns <CompactAdjacencyMatrix>\n*\n* adj.addEdge( 0, 1 );\n* adj.addEdge( 0, 2 );\n* adj.addEdge( 1, 2 );\n* adj.addEdge( 2, 3 );\n*\n* // ...\n*\n* adj.removeEdge( 0, 1 );\n* adj.removeEdge( 0, 2 );\n* adj.removeEdge( 1, 2 );\n* adj.removeEdge( 2, 3 );\n*/\nsetReadOnly( CompactAdjacencyMatrix.prototype, 'removeEdge', function removeEdge( i, j ) {\n\tvar idx;\n\tif ( !isNonNegativeInteger( i ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a nonnegative integer. Value: `%s`.', i ) );\n\t}\n\tif ( !isNonNegativeInteger( j ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', j ) );\n\t}\n\tif ( i >= this._N ) {\n\t\tthrow new RangeError( format( 'invalid argument. First argument exceeds matrix dimensions. Value: `%u`.', i ) );\n\t}\n\tif ( j >= this._N ) {\n\t\tthrow new RangeError( format( 'invalid argument. Second argument exceeds matrix dimensions. Value: `%u`.', j ) );\n\t}\n\t// Resolve the `(i,j)` pair:\n\tidx = this._loc( i, j, [ 0, 0 ] );\n\n\t// Clear the bit for the edge:\n\tif ( isSet( this._buffer[ idx[0] ], idx[1] ) ) {\n\t\tthis._buffer[ idx[0] ] = clearBit( this._buffer[ idx[0] ], idx[1] );\n\t\tthis._M -= 1;\n\t}\n\treturn this;\n});\n\n/**\n* Returns an adjacency list representation.\n*\n* @name toAdjacencyList\n* @memberof CompactAdjacencyMatrix.prototype\n* @type {Function}\n* @returns {Array} adjacency list representation\n*\n* @example\n* var adj = new CompactAdjacencyMatrix( 4 );\n* // returns <CompactAdjacencyMatrix>\n*\n* adj.addEdge( 0, 1 );\n* adj.addEdge( 0, 2 );\n* adj.addEdge( 1, 2 );\n* adj.addEdge( 2, 3 );\n*\n* var list = adj.toAdjacencyList();\n* // returns [ [ 1, 2 ], [ 2 ], [ 3 ], [] ]\n*/\nsetReadOnly( CompactAdjacencyMatrix.prototype, 'toAdjacencyList', function toAdjacencyList() {\n\tvar list;\n\tvar idx;\n\tvar tmp;\n\tvar i;\n\tvar j;\n\n\tlist = [];\n\tidx = [ 0, 0 ];\n\tfor ( i = 0; i < this._N; i++ ) {\n\t\ttmp = [];\n\t\tfor ( j = 0; j < this._N; j++ ) {\n\t\t\t// Resolve the `(i,j)` pair:\n\t\t\tidx = this._loc( i, j, idx );\n\n\t\t\t// Check for an edge:\n\t\t\tif ( isSet( this._buffer[ idx[0] ], idx[1] ) ) {\n\t\t\t\ttmp.push( j );\n\t\t\t}\n\t\t}\n\t\tlist.push( tmp );\n\t}\n\treturn list;\n});\n\n/**\n* Returns a topological ordering of the directed graph.\n*\n* ## Notes\n*\n* -   The function returns a two-element array.\n* -   If the function is able to compute a topological ordering, the first array element is the topological ordering and the second element is `null`.\n* -   If a topological ordering cannot be achieved (e.g., due to the graph not being a directed acyclic graph (DAG)), the first array element is `null` and the second element is the first encountered cycle.\n*\n* @name toposort\n* @memberof CompactAdjacencyMatrix.prototype\n* @type {Function}\n* @returns {Array} topological ordering\n*\n* @example\n* var adj = new CompactAdjacencyMatrix( 4 );\n* // returns <CompactAdjacencyMatrix>\n*\n* adj.addEdge( 1, 0 );\n* adj.addEdge( 1, 2 );\n* adj.addEdge( 0, 2 );\n* adj.addEdge( 2, 3 );\n*\n* var results = adj.toposort();\n* // returns <Array>\n*\n* var order = results[ 0 ];\n* // returns [ 1, 0, 2, 3 ]\n*\n* var cycle = results[ 1 ];\n* // returns null\n*/\nsetReadOnly( CompactAdjacencyMatrix.prototype, 'toposort', function toposort() {\n\tvar marks;\n\tvar self;\n\tvar out;\n\tvar idx;\n\tvar err;\n\tvar N;\n\tvar s;\n\tvar i;\n\n\tself = this;\n\tN = this._N;\n\n\t// Initialize an empty list that will contain the sorted vertices:\n\tout = [];\n\n\t// If the graph is empty, nothing to sort...\n\tif ( this._N === 0 ) {\n\t\treturn [ out, null ];\n\t}\n\t// Initialize an array for keeping track of whether a vertex has been \"visited\":\n\tmarks = new Int8Array( N );\n\n\t// Initialize a stack for keeping track of cycles:\n\ts = [];\n\n\t// Process vertices using depth-first-search...\n\tidx = [ 0, 0 ];\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( marks[ i ] === 0 ) {\n\t\t\terr = visit( i );\n\t\t\tif ( err !== 0 ) {\n\t\t\t\t// Found a cycle...\n\t\t\t\ts.push( i );\n\t\t\t\treturn [ null, s ];\n\t\t\t}\n\t\t}\n\t}\n\t// Reverse the output array as the leaves were added first, followed the by the roots, via depth-first-search:\n\tgrev( out.length, out, 1 );\n\n\treturn [ out, null ];\n\n\t/**\n\t* Visits a graph vertex and follows edges until finding a leaf vertex (if one exists).\n\t*\n\t* ## Notes\n\t*\n\t* -   If the function is able to successfully perform a depth-first-search, the functions returns `0`; otherwise, the function returns `-1` in the event of a cycle.\n\t*\n\t* @private\n\t* @param {NonNegativeInteger} i - vertex\n\t* @returns {integer} error code\n\t*/\n\tfunction visit( i ) {\n\t\tvar err;\n\t\tvar j;\n\n\t\t// Check if we've already processed/visited this vertex...\n\t\tif ( marks[ i ] === 2 ) {\n\t\t\treturn 0;\n\t\t}\n\t\t// Check if we've seen this vertex before and the vertex is still being processed...\n\t\tif ( marks[ i ] === 1 ) {\n\t\t\t// We've found a cycle...\n\t\t\treturn -1;\n\t\t}\n\t\t// Mark the current vertex as currently being processed:\n\t\tmarks[ i ] = 1;\n\n\t\t// Follow all edges from the current vertex...\n\t\tfor ( j = 0; j < N; j++ ) {\n\t\t\tidx = self._loc( i, j, idx ); // eslint-disable-line no-underscore-dangle\n\t\t\tif ( isSet( self._buffer[ idx[0] ], idx[1] ) ) { // eslint-disable-line no-underscore-dangle\n\t\t\t\terr = visit( j );\n\t\t\t\tif ( err !== 0 ) {\n\t\t\t\t\t// This vertex is part of a cycle, so add to cycle stack...\n\t\t\t\t\ts.push( j );\n\t\t\t\t\treturn err;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Mark the current vertex as processed:\n\t\tmarks[ i ] = 2;\n\n\t\t// Add to the output array now that all subsequent vertices (relative to this vertex) in the graph have already been added to the output array:\n\t\tout.push( i );\n\n\t\treturn 0;\n\t}\n});\n\n\n// EXPORTS //\n\nexport default CompactAdjacencyMatrix;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from '@stdlib/utils/define-property';\n\n\n// MAIN //\n\n/**\n* List node constructor.\n*\n* @private\n* @constructor\n* @param {*} value - node value\n* @returns {Node} Node instance\n*\n* @example\n* var node = new Node( 'foo' );\n* // returns <Node>\n*/\nfunction Node( value ) { // eslint-disable-line stdlib/no-redeclare\n\t// Why getters? Because some of the list APIs will return the list \"node\", not the value. In which case, the node API is no longer private and we have to guard against users mucking about (deleting, updating, etc) with property values (in particular, the `next` and `prev` properties).\n\tdefineProperty( this, 'next', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': function get() { // eslint-disable-line no-restricted-syntax\n\t\t\treturn this._next;\n\t\t}\n\t});\n\tdefineProperty( this, 'prev', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': function get() { // eslint-disable-line no-restricted-syntax\n\t\t\treturn this._prev;\n\t\t}\n\t});\n\tthis.value = value;\n\n\tdefineProperty( this, '_next', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': null\n\t});\n\tdefineProperty( this, '_prev', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': null\n\t});\n\n\treturn this;\n}\n\n\n// EXPORTS //\n\nexport default Node;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-restricted-syntax, no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from '@stdlib/utils/define-nonenumerable-read-only-accessor';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\nimport Node from './node.js'; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Doubly linked list constructor.\n*\n* @constructor\n* @returns {DoublyLinkedList} linked list instance\n*\n* @example\n* var list = new DoublyLinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Remove the last value:\n* var v = list.pop();\n* // returns 'bar'\n*\n* // Add a new value to the list:\n* list.push( 'beep' );\n*\n* // Remove the first value:\n* v = list.shift();\n* // returns 'foo'\n*/\nfunction DoublyLinkedList() {\n\tif ( !(this instanceof DoublyLinkedList) ) {\n\t\treturn new DoublyLinkedList();\n\t}\n\tthis._length = 0;\n\tthis._first = null;\n\tthis._last = null;\n\treturn this;\n}\n\n/**\n* Clears the list.\n*\n* @name clear\n* @memberof DoublyLinkedList.prototype\n* @type {Function}\n* @returns {DoublyLinkedList} list instance\n*\n* @example\n* var list = new DoublyLinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Peek at the first value:\n* var v = list.first().value;\n* // returns 'foo'\n*\n* // Examine the list length:\n* var len = list.length;\n* // returns 2\n*\n* // Clear all list items:\n* list.clear();\n*\n* // Peek at the first value:\n* v = list.first();\n* // returns undefined\n*\n* // Examine the list length:\n* len = list.length;\n* // returns 0\n*/\nsetReadOnly( DoublyLinkedList.prototype, 'clear', function clear() {\n\tthis._length = 0;\n\tthis._first = null;\n\tthis._last = null;\n\treturn this;\n});\n\n/**\n* Returns the first list node.\n*\n* @name first\n* @memberof DoublyLinkedList.prototype\n* @type {Function}\n* @returns {(Node|void)} list node\n*\n* @example\n* var list = new DoublyLinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Peek at the first value:\n* var v = list.first().value;\n* // returns 'foo'\n*/\nsetReadOnly( DoublyLinkedList.prototype, 'first', function first() {\n\tif ( this._length ) {\n\t\treturn this._first;\n\t}\n});\n\n/**\n* Inserts a value into the list either before or after a provided list node.\n*\n* @name insert\n* @memberof DoublyLinkedList.prototype\n* @type {Function}\n* @param {Node} node - node after which to insert the value\n* @param {*} value - value to insert\n* @param {string} [location='after'] - location\n* @throws {Error} must provide a node belonging to the list\n* @throws {Error} must provide a recognized location\n* @returns {DoublyLinkedList} list instance\n*\n* @example\n* var list = new DoublyLinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' ).push( 'beep' );\n*\n* // Determine the list length:\n* var len = list.length;\n* // returns 3\n*\n* // Get the second node:\n* var node = list.first().next;\n*\n* // Insert a value after the second node:\n* list.insert( node, 'boop' );\n*\n* // Determine the list length:\n* len = list.length;\n* // returns 4\n*/\nsetReadOnly( DoublyLinkedList.prototype, 'insert', function insert( node, value, location ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar loc;\n\tvar n;\n\tif ( arguments.length > 2 ) {\n\t\tloc = location;\n\t\tif ( loc !== 'before' && loc !== 'after' ) {\n\t\t\tthrow new Error( format( 'invalid argument. Third argument must be a recognized location. Value: `%s`.', loc ) );\n\t\t}\n\t} else {\n\t\tloc = 'after';\n\t}\n\t// Case: insert after last node (equivalent to `push()`)\n\tif ( loc === 'after' && node === this._last ) {\n\t\treturn this.push( value );\n\t}\n\t// Case: insert before first node (equivalent to `unshift()`)\n\tif ( loc === 'before' && node === this._first ) {\n\t\treturn this.unshift( value );\n\t}\n\t// Unfortunately, we need to check whether we have been provided a node belonging to our list by walking the list. If we don't, we could erroneously increment the list length. This means our runtime goes from the theoretical O(1) to O(N).\n\tn = this._first;\n\twhile ( n !== this._last && n !== node ) {\n\t\tn = n._next;\n\t}\n\t// Check if we iterated through the entire list:\n\tif ( n === this._last && n !== node ) {\n\t\tthrow new Error( 'invalid argument. The list does not contain the provided list node.' );\n\t}\n\t// Create a new list node:\n\tn = new Node( value );\n\n\t// Update pointers...\n\tif ( loc === 'after' ) {\n\t\tnode._next._prev = n;\n\t\tn._next = node._next;\n\n\t\tnode._next = n;\n\t\tn._prev = node;\n\t} else {\n\t\tnode._prev._next = n;\n\t\tn._prev = node._prev;\n\n\t\tnode._prev = n;\n\t\tn._next = node;\n\t}\n\t// Increment the list length:\n\tthis._length += 1;\n\n\treturn this;\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Returns an iterator for iterating over a list.\n*\n* ## Notes\n*\n* -   In order to prevent confusion arising from list mutation during iteration, a returned iterator **always** iterates over a list \"snapshot\", which is defined as the list of elements at the time of this method's invocation.\n*\n* @name iterator\n* @memberof DoublyLinkedList.prototype\n* @type {Function}\n* @param {string} [direction=\"forward\"] - iteration direction\n* @throws {Error} must provide a recognized iteration direction\n* @returns {Iterator} iterator\n*\n* @example\n* var list = new DoublyLinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Create an iterator:\n* var it = list.iterator();\n*\n* // Iterate over the list...\n* var v = it.next().value;\n* // returns 'foo'\n*\n* v = it.next().value;\n* // returns 'bar'\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( DoublyLinkedList.prototype, 'iterator', function iterator( direction ) {\n\tvar values;\n\tvar iter;\n\tvar self;\n\tvar FLG;\n\tvar dir;\n\tvar inc;\n\tvar i;\n\tif ( arguments.length ) {\n\t\tdir = direction;\n\t\tif ( dir !== 'forward' && dir !== 'reverse' ) {\n\t\t\tthrow new Error( format( 'invalid argument. Must provide a recognized iteration direction. Value: `%s`.', dir ) );\n\t\t}\n\t} else {\n\t\tdir = 'forward';\n\t}\n\tself = this;\n\n\t// Initialize the iteration index:\n\tif ( dir === 'forward' ) {\n\t\ti = -1;\n\t\tinc = 1;\n\t} else {\n\t\ti = this._length;\n\t\tinc = -1;\n\t}\n\t// Create a copy of list values (necessary in order to \"snapshot\" the list; otherwise, values could come and go between calls to `next`):\n\tvalues = this.toArray();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += inc;\n\t\tif ( FLG || i < 0 || i >= values.length ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': values[ i ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.iterator();\n\t}\n});\n\n/**\n* Returns the last node.\n*\n* @name last\n* @memberof DoublyLinkedList.prototype\n* @type {Function}\n* @returns {(Node|void)} list node\n*\n* @example\n* var list = new DoublyLinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Peek at the last value:\n* var v = list.last().value;\n* // returns 'bar'\n*/\nsetReadOnly( DoublyLinkedList.prototype, 'last', function last() {\n\tif ( this._length ) {\n\t\treturn this._last;\n\t}\n});\n\n/**\n* List length.\n*\n* @name length\n* @memberof DoublyLinkedList.prototype\n* @type {NonNegativeInteger}\n*\n* @example\n* var list = new DoublyLinkedList();\n*\n* // Examine the initial list length:\n* var len = list.length;\n* // returns 0\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Retrieve the current list length:\n* len = list.length;\n* // returns 2\n*/\nsetReadOnlyAccessor( DoublyLinkedList.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Removes a value from the end of the list.\n*\n* @name pop\n* @memberof DoublyLinkedList.prototype\n* @type {Function}\n* @returns {(*|void)} removed value\n*\n* @example\n* var list = new DoublyLinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Remove the last value:\n* var v = list.pop();\n* // returns 'bar'\n*\n* // Add a new value to the list:\n* list.push( 'beep' );\n*\n* // Remove the last value:\n* v = list.pop();\n* // returns 'beep'\n*/\nsetReadOnly( DoublyLinkedList.prototype, 'pop', function pop() {\n\t/* eslint-disable no-underscore-dangle */\n\tvar value;\n\tif ( this._length ) {\n\t\t// Retrieve the last value:\n\t\tvalue = this._last.value;\n\n\t\t// Check whether we have a new \"tail\" or whether we have emptied the list...\n\t\tif ( this._last._prev ) {\n\t\t\tthis._last = this._last._prev;\n\t\t\tthis._last._next = null;\n\t\t} else {\n\t\t\t// List is empty:\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t}\n\t\t// Decrement the list length:\n\t\tthis._length -= 1;\n\t}\n\treturn value;\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Adds a value to the end of the list.\n*\n* @name push\n* @memberof DoublyLinkedList.prototype\n* @type {Function}\n* @returns {DoublyLinkedList} list instance\n*\n* @example\n* var list = new DoublyLinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Remove the last value:\n* var v = list.pop();\n* // returns 'bar'\n*\n* // Add a new value to the list:\n* list.push( 'beep' );\n*\n* // Remove the last value:\n* v = list.pop();\n* // returns 'beep'\n*/\nsetReadOnly( DoublyLinkedList.prototype, 'push', function push( value ) {\n\tvar node;\n\n\t// Create a new list node:\n\tnode = new Node( value );\n\n\t// Check whether the list is currently empty...\n\tif ( this._length === 0 ) {\n\t\t// This is the only list node, making it both the first and last node:\n\t\tthis._first = node;\n\t\tthis._last = node;\n\t} else {\n\t\t// Link the new node to the previous last node:\n\t\tnode._prev = this._last; // eslint-disable-line no-underscore-dangle\n\n\t\t// Link the previous last node to the new node:\n\t\tthis._last._next = node; // eslint-disable-line no-underscore-dangle\n\n\t\t// Update the pointer for the last node:\n\t\tthis._last = node;\n\t}\n\t// Increment the list length:\n\tthis._length += 1;\n\n\treturn this;\n});\n\n/**\n* Removes a list node from the list.\n*\n* @name remove\n* @memberof DoublyLinkedList.prototype\n* @type {Function}\n* @param {Node} node - node to remove\n* @throws {Error} must provide a node belonging to the list\n* @returns {(*|void)} removed value\n*\n* @example\n* var list = new DoublyLinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' ).push( 'beep' );\n*\n* // Determine the list length:\n* var len = list.length;\n* // returns 3\n*\n* // Get the second node:\n* var node = list.first().next;\n*\n* // Remove the second node:\n* var v = list.remove( node );\n* // returns 'bar'\n*\n* // Determine the list length:\n* len = list.length;\n* // returns 2\n*/\nsetReadOnly( DoublyLinkedList.prototype, 'remove', function remove( node ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar value;\n\tvar n;\n\n\t// Case: first node (equivalent to `shift()`)\n\tif ( node === this._first ) {\n\t\treturn this.shift();\n\t}\n\t// Case: last node (equivalent to `pop()`)\n\tif ( node === this._last ) {\n\t\treturn this.pop();\n\t}\n\t// Retrieve the node value:\n\tvalue = node.value;\n\n\t// Unfortunately, we need to check whether we have been provided a node belonging to our list by walking the list. If we don't, we could erroneously decrement the list length. This means our runtime goes from the theoretical O(1) to O(N).\n\tn = this._first;\n\twhile ( n !== this._last && n !== node ) {\n\t\tn = n._next;\n\t}\n\t// Check if we iterated through the entire list:\n\tif ( n === this._last ) {\n\t\tthrow new Error( 'invalid argument. The list does not contain the provided list node.' );\n\t}\n\t// Update pointers:\n\tnode._prev._next = node._next;\n\tnode._next._prev = node._prev;\n\n\t// Decrement the list length:\n\tthis._length -= 1;\n\n\treturn value;\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Removes a value from the beginning of the list.\n*\n* @name shift\n* @memberof DoublyLinkedList.prototype\n* @type {Function}\n* @returns {(*|void)} removed value\n*\n* @example\n* var list = new DoublyLinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Remove the first value:\n* var v = list.shift();\n* // returns 'foo'\n*\n* // Add a new value to the list:\n* list.push( 'beep' );\n*\n* // Remove the first value:\n* v = list.shift();\n* // returns 'bar'\n*/\nsetReadOnly( DoublyLinkedList.prototype, 'shift', function shift() {\n\t/* eslint-disable no-underscore-dangle */\n\tvar value;\n\tif ( this._length ) {\n\t\t// Retrieve the first value:\n\t\tvalue = this._first.value;\n\n\t\t// Check whether we have a new \"head\" or whether we have emptied the list...\n\t\tif ( this._first._next ) {\n\t\t\tthis._first = this._first._next;\n\t\t\tthis._first._prev = null;\n\t\t} else {\n\t\t\t// List is empty:\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t}\n\t\t// Decrement the list length:\n\t\tthis._length -= 1;\n\t}\n\treturn value;\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Returns an array of list values.\n*\n* @name toArray\n* @memberof DoublyLinkedList.prototype\n* @type {Function}\n* @returns {Array} list values\n*\n* @example\n* var list = new DoublyLinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Get an array of list values:\n* var vals = list.toArray();\n* // returns [ 'foo', 'bar' ]\n*/\nsetReadOnly( DoublyLinkedList.prototype, 'toArray', function toArray() {\n\tvar node;\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tnode = this._first;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( node.value );\n\t\tnode = node.next;\n\t}\n\treturn out;\n});\n\n/**\n* Serializes a list as JSON.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `DoublyLinkedList` instance.\n*\n* @name toJSON\n* @memberof DoublyLinkedList.prototype\n* @type {Function}\n* @returns {Object} serialized list\n*\n* @example\n* var list = new DoublyLinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Serialize to JSON:\n* var o = list.toJSON();\n* // returns { 'type': 'doubly-linked-list', 'data': [ 'foo', 'bar' ] }\n*/\nsetReadOnly( DoublyLinkedList.prototype, 'toJSON', function toJSON() {\n\tvar out = {};\n\tout.type = 'doubly-linked-list';\n\tout.data = this.toArray();\n\treturn out;\n});\n\n/**\n* Adds a value to the beginning of the list.\n*\n* @name unshift\n* @memberof DoublyLinkedList.prototype\n* @type {Function}\n* @returns {DoublyLinkedList} list instance\n*\n* @example\n* var list = new DoublyLinkedList();\n*\n* // Add values to the beginning of the list:\n* list.unshift( 'foo' ).unshift( 'bar' );\n*\n* // Remove the last value:\n* var v = list.pop();\n* // returns 'foo'\n*\n* // Add a new value to the beginning of the list:\n* list.unshift( 'beep' );\n*\n* // Remove the last value:\n* v = list.pop();\n* // returns 'bar'\n*/\nsetReadOnly( DoublyLinkedList.prototype, 'unshift', function unshift( value ) {\n\tvar node;\n\n\t// Create a new list node:\n\tnode = new Node( value );\n\n\t// Check whether the list is currently empty...\n\tif ( this._length === 0 ) {\n\t\t// This is the only list node, making it both the first and last node:\n\t\tthis._first = node;\n\t\tthis._last = node;\n\t} else {\n\t\t// Link the new node to the previous first node:\n\t\tnode._next = this._first; // eslint-disable-line no-underscore-dangle\n\n\t\t// Link the previous first node to the new node:\n\t\tthis._first._prev = node; // eslint-disable-line no-underscore-dangle\n\n\t\t// Update the pointer for the first node:\n\t\tthis._first = node;\n\t}\n\t// Increment the list length:\n\tthis._length += 1;\n\n\treturn this;\n});\n\n\n// EXPORTS //\n\nexport default DoublyLinkedList;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Queue node constructor.\n*\n* @private\n* @constructor\n* @param {*} value - node value\n* @returns {Node} Node instance\n*\n* @example\n* var node = new Node( 'foo' );\n* // returns <Node>\n*/\nfunction Node( value ) { // eslint-disable-line stdlib/no-redeclare\n\tthis.next = null;\n\tthis.prev = null;\n\tthis.value = value;\n\treturn this;\n}\n\n\n// EXPORTS //\n\nexport default Node;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-restricted-syntax, no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from '@stdlib/utils/define-nonenumerable-read-only-accessor';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport Node from './node.js'; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* First-in-first-out queue constructor.\n*\n* @constructor\n* @returns {FIFO} FIFO queue instance\n*\n* @example\n* var queue = new FIFO();\n*\n* // Add values to the queue:\n* queue.push( 'foo' ).push( 'bar' );\n*\n* // Remove the first value:\n* var v = queue.pop();\n* // returns 'foo'\n*\n* // Add a new value to the queue:\n* queue.push( 'beep' );\n*\n* // Remove the \"oldest\" queue value:\n* v = queue.pop();\n* // returns 'bar'\n*/\nfunction FIFO() {\n\tif ( !(this instanceof FIFO) ) {\n\t\treturn new FIFO();\n\t}\n\tthis._length = 0;\n\tthis._first = null;\n\tthis._last = null;\n\treturn this;\n}\n\n/**\n* Clears the queue.\n*\n* @name clear\n* @memberof FIFO.prototype\n* @type {Function}\n* @returns {FIFO} queue instance\n*\n* @example\n* var queue = new FIFO();\n*\n* // Add values to the queue:\n* queue.push( 'foo' ).push( 'bar' );\n*\n* // Peek at the first value:\n* var v = queue.first();\n* // returns 'foo'\n*\n* // Examine the queue length:\n* var len = queue.length;\n* // returns 2\n*\n* // Clear all queue items:\n* queue.clear();\n*\n* // Peek at the first value:\n* v = queue.first();\n* // returns undefined\n*\n* // Examine the queue length:\n* len = queue.length;\n* // returns 0\n*/\nsetReadOnly( FIFO.prototype, 'clear', function clear() {\n\tthis._length = 0;\n\tthis._first = null;\n\tthis._last = null;\n\treturn this;\n});\n\n/**\n* Returns the \"oldest\" queue value (i.e., the value which is \"first-out\").\n*\n* @name first\n* @memberof FIFO.prototype\n* @type {Function}\n* @returns {(*|void)} \"oldest\" queue value\n*\n* @example\n* var queue = new FIFO();\n*\n* // Add values to the queue:\n* queue.push( 'foo' ).push( 'bar' );\n*\n* // Peek at the first value:\n* var v = queue.first();\n* // returns 'foo'\n*/\nsetReadOnly( FIFO.prototype, 'first', function first() {\n\tif ( this._length ) {\n\t\treturn this._first.value;\n\t}\n});\n\n/**\n* Returns an iterator for iterating over a queue.\n*\n* ## Notes\n*\n* -   In order to prevent confusion arising from queue mutation during iteration, a returned iterator **always** iterates over a queue \"snapshot\", which is defined as the list of queue elements at the time of this method's invocation.\n*\n* @name iterator\n* @memberof FIFO.prototype\n* @type {Function}\n* @returns {Iterator} iterator\n*\n* @example\n* var queue = new FIFO();\n*\n* // Add values to the queue:\n* queue.push( 'foo' ).push( 'bar' );\n*\n* // Create an iterator:\n* var it = queue.iterator();\n*\n* // Iterate over the queue...\n* var v = it.next().value;\n* // returns 'foo'\n*\n* v = it.next().value;\n* // returns 'bar'\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( FIFO.prototype, 'iterator', function iterator() {\n\tvar values;\n\tvar iter;\n\tvar self;\n\tvar FLG;\n\tvar i;\n\n\tself = this;\n\n\t// Initialize the iteration index:\n\ti = -1;\n\n\t// Create a copy of queue values (necessary in order to \"snapshot\" the queue; otherwise, values could come and go between calls to `next`):\n\tvalues = this.toArray();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= values.length ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': values[ i ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.iterator();\n\t}\n});\n\n/**\n* Returns the \"newest\" queue value (i.e., the value which is currently \"last-out\").\n*\n* @name last\n* @memberof FIFO.prototype\n* @type {Function}\n* @returns {(*|void)} \"newest\" queue value\n*\n* @example\n* var queue = new FIFO();\n*\n* // Add values to the queue:\n* queue.push( 'foo' ).push( 'bar' );\n*\n* // Peek at the last value:\n* var v = queue.last();\n* // returns 'bar'\n*/\nsetReadOnly( FIFO.prototype, 'last', function last() {\n\tif ( this._length ) {\n\t\treturn this._last.value;\n\t}\n});\n\n/**\n* Queue length.\n*\n* @name length\n* @memberof FIFO.prototype\n* @type {NonNegativeInteger}\n*\n* @example\n* var queue = new FIFO();\n*\n* // Examine the initial queue length:\n* var len = queue.length;\n* // returns 0\n*\n* // Add values to the queue:\n* queue.push( 'foo' ).push( 'bar' );\n*\n* // Retrieve the current queue length:\n* len = queue.length;\n* // returns 2\n*/\nsetReadOnlyAccessor( FIFO.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Removes a value from the queue.\n*\n* @name pop\n* @memberof FIFO.prototype\n* @type {Function}\n* @returns {(*|void)} removed value\n*\n* @example\n* var queue = new FIFO();\n*\n* // Add values to the queue:\n* queue.push( 'foo' ).push( 'bar' );\n*\n* // Remove the first value:\n* var v = queue.pop();\n* // returns 'foo'\n*\n* // Add a new value to the queue:\n* queue.push( 'beep' );\n*\n* // Remove the \"oldest\" queue value:\n* v = queue.pop();\n* // returns 'bar'\n*/\nsetReadOnly( FIFO.prototype, 'pop', function pop() {\n\tvar value;\n\tif ( this._length ) {\n\t\t// Retrieve the \"first-out\" value:\n\t\tvalue = this._first.value;\n\n\t\t// Check whether we have a new \"first-out\" or whether we have drained the queue...\n\t\tif ( this._first.next ) {\n\t\t\tthis._first = this._first.next;\n\t\t\tthis._first.prev = null;\n\t\t} else {\n\t\t\t// Queue is empty:\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t}\n\t\t// Decrement the queue length:\n\t\tthis._length -= 1;\n\t}\n\treturn value;\n});\n\n/**\n* Adds a value to the queue.\n*\n* @name push\n* @memberof FIFO.prototype\n* @type {Function}\n* @returns {FIFO} queue instance\n*\n* @example\n* var queue = new FIFO();\n*\n* // Add values to the queue:\n* queue.push( 'foo' ).push( 'bar' );\n*\n* // Remove the first value:\n* var v = queue.pop();\n* // returns 'foo'\n*\n* // Add a new value to the queue:\n* queue.push( 'beep' );\n*\n* // Remove the \"oldest\" queue value:\n* v = queue.pop();\n* // returns 'bar'\n*/\nsetReadOnly( FIFO.prototype, 'push', function push( value ) {\n\tvar node;\n\n\t// Create a new queue node:\n\tnode = new Node( value );\n\n\t// Check whether the queue is currently empty...\n\tif ( this._length === 0 ) {\n\t\t// This is the only queued node, making it both the first and last node:\n\t\tthis._first = node;\n\t\tthis._last = node;\n\t} else {\n\t\t// Link the node to the previous most \"recent\" node:\n\t\tnode.prev = this._last;\n\n\t\t// Link the previous most \"recent\" node to the new node:\n\t\tthis._last.next = node;\n\n\t\t// Update the queue pointer for the \"last\" node to the new node:\n\t\tthis._last = node;\n\t}\n\t// Increment the queue length:\n\tthis._length += 1;\n\n\treturn this;\n});\n\n/**\n* Returns an array of queue values.\n*\n* @name toArray\n* @memberof FIFO.prototype\n* @type {Function}\n* @returns {Array} queue values\n*\n* @example\n* var queue = new FIFO();\n*\n* // Add values to the queue:\n* queue.push( 'foo' ).push( 'bar' );\n*\n* // Get an array of queue values:\n* var vals = queue.toArray();\n* // returns [ 'foo', 'bar' ]\n*/\nsetReadOnly( FIFO.prototype, 'toArray', function toArray() {\n\tvar node;\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tnode = this._first;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( node.value );\n\t\tnode = node.next;\n\t}\n\treturn out;\n});\n\n/**\n* Serializes a queue as JSON.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `FIFO` instance.\n*\n* @name toJSON\n* @memberof FIFO.prototype\n* @type {Function}\n* @returns {Object} serialized queue\n*\n* @example\n* var queue = new FIFO();\n*\n* // Add values to the queue:\n* queue.push( 'foo' ).push( 'bar' );\n*\n* // Serialize to JSON:\n* var o = queue.toJSON();\n* // returns { 'type': 'fifo', 'data': [ 'foo', 'bar' ] }\n*/\nsetReadOnly( FIFO.prototype, 'toJSON', function toJSON() {\n\tvar out = {};\n\tout.type = 'fifo';\n\tout.data = this.toArray();\n\treturn out;\n});\n\n\n// EXPORTS //\n\nexport default FIFO;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from '@stdlib/utils/define-property';\n\n\n// MAIN //\n\n/**\n* List node constructor.\n*\n* @private\n* @constructor\n* @param {*} value - node value\n* @returns {Node} Node instance\n*\n* @example\n* var node = new Node( 'foo' );\n* // returns <Node>\n*/\nfunction Node( value ) { // eslint-disable-line stdlib/no-redeclare\n\t// Why a getter? Because some of the list APIs will return the list \"node\", not the value. In which case, the node API is no longer private and we have to guard against users mucking about (deleting, updating, etc) with property values (in particular, the `next` property).\n\tdefineProperty( this, 'next', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': function get() { // eslint-disable-line no-restricted-syntax\n\t\t\treturn this._next;\n\t\t}\n\t});\n\tthis.value = value;\n\n\tdefineProperty( this, '_next', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': null\n\t});\n\n\t// NOTE: strictly speaking, we should not be keeping back-references in a singly-linked list; however, doing so allows us to more efficiently add, remove, and insert list values.\n\tdefineProperty( this, '_prev', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': null\n\t});\n\n\treturn this;\n}\n\n\n// EXPORTS //\n\nexport default Node;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-restricted-syntax, no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from '@stdlib/utils/define-nonenumerable-read-only-accessor';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\nimport Node from './node.js'; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Linked list constructor.\n*\n* @constructor\n* @returns {LinkedList} linked list instance\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Remove the last value:\n* var v = list.pop();\n* // returns 'bar'\n*\n* // Add a new value to the list:\n* list.push( 'beep' );\n*\n* // Remove the first value:\n* v = list.shift();\n* // returns 'foo'\n*/\nfunction LinkedList() {\n\tif ( !(this instanceof LinkedList) ) {\n\t\treturn new LinkedList();\n\t}\n\tthis._length = 0;\n\tthis._first = null;\n\tthis._last = null;\n\treturn this;\n}\n\n/**\n* Clears the list.\n*\n* @name clear\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {LinkedList} list instance\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Peek at the first value:\n* var v = list.first().value;\n* // returns 'foo'\n*\n* // Examine the list length:\n* var len = list.length;\n* // returns 2\n*\n* // Clear all list items:\n* list.clear();\n*\n* // Peek at the first value:\n* v = list.first();\n* // returns undefined\n*\n* // Examine the list length:\n* len = list.length;\n* // returns 0\n*/\nsetReadOnly( LinkedList.prototype, 'clear', function clear() {\n\tthis._length = 0;\n\tthis._first = null;\n\tthis._last = null;\n\treturn this;\n});\n\n/**\n* Returns the first list node.\n*\n* @name first\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {(Node|void)} list node\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Peek at the first value:\n* var v = list.first().value;\n* // returns 'foo'\n*/\nsetReadOnly( LinkedList.prototype, 'first', function first() {\n\tif ( this._length ) {\n\t\treturn this._first;\n\t}\n});\n\n/**\n* Inserts a value into the list **after** a provided list node.\n*\n* @name insert\n* @memberof LinkedList.prototype\n* @type {Function}\n* @param {Node} node - node after which to insert the value\n* @param {*} value - value to insert\n* @throws {Error} must provide a node belonging to the list\n* @returns {LinkedList} list instance\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' ).push( 'beep' );\n*\n* // Determine the list length:\n* var len = list.length;\n* // returns 3\n*\n* // Get the second node:\n* var node = list.first().next;\n*\n* // Insert a value after the second node:\n* list.insert( node, 'boop' );\n*\n* // Determine the list length:\n* len = list.length;\n* // returns 4\n*/\nsetReadOnly( LinkedList.prototype, 'insert', function insert( node, value ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar n;\n\n\t// Case: last node (equivalent to `push()`)\n\tif ( node === this._last ) {\n\t\treturn this.push( value );\n\t}\n\t// Unfortunately, we need to check whether we have been provided a node belonging to our list by walking the list. If we don't, we could erroneously increment the list length. This means our runtime goes from the theoretical O(1) to O(N).\n\tn = this._first;\n\twhile ( n !== this._last && n !== node ) {\n\t\tn = n._next;\n\t}\n\t// Check if we iterated through the entire list:\n\tif ( n === this._last ) {\n\t\tthrow new Error( 'invalid argument. The list does not contain the provided list node.' );\n\t}\n\t// Create a new list node:\n\tn = new Node( value );\n\n\t// Update pointers:\n\tnode._next._prev = n;\n\tn._next = node._next;\n\n\tnode._next = n;\n\tn._prev = node;\n\n\t// Increment the list length:\n\tthis._length += 1;\n\n\treturn this;\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Returns an iterator for iterating over a list.\n*\n* ## Notes\n*\n* -   In order to prevent confusion arising from list mutation during iteration, a returned iterator **always** iterates over a list \"snapshot\", which is defined as the list of elements at the time of this method's invocation.\n*\n* @name iterator\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {Iterator} iterator\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Create an iterator:\n* var it = list.iterator();\n*\n* // Iterate over the list...\n* var v = it.next().value;\n* // returns 'foo'\n*\n* v = it.next().value;\n* // returns 'bar'\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( LinkedList.prototype, 'iterator', function iterator() {\n\tvar values;\n\tvar iter;\n\tvar self;\n\tvar FLG;\n\tvar i;\n\n\tself = this;\n\n\t// Initialize the iteration index:\n\ti = -1;\n\n\t// Create a copy of list values (necessary in order to \"snapshot\" the list; otherwise, values could come and go between calls to `next`):\n\tvalues = this.toArray();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti += 1;\n\t\tif ( FLG || i >= values.length ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': values[ i ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.iterator();\n\t}\n});\n\n/**\n* Returns the last node.\n*\n* @name last\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {(Node|void)} list node\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Peek at the last value:\n* var v = list.last().value;\n* // returns 'bar'\n*/\nsetReadOnly( LinkedList.prototype, 'last', function last() {\n\tif ( this._length ) {\n\t\treturn this._last;\n\t}\n});\n\n/**\n* List length.\n*\n* @name length\n* @memberof LinkedList.prototype\n* @type {NonNegativeInteger}\n*\n* @example\n* var list = new LinkedList();\n*\n* // Examine the initial list length:\n* var len = list.length;\n* // returns 0\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Retrieve the current list length:\n* len = list.length;\n* // returns 2\n*/\nsetReadOnlyAccessor( LinkedList.prototype, 'length', function get() {\n\treturn this._length;\n});\n\n/**\n* Removes a value from the end of the list.\n*\n* @name pop\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {(*|void)} removed value\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Remove the last value:\n* var v = list.pop();\n* // returns 'bar'\n*\n* // Add a new value to the list:\n* list.push( 'beep' );\n*\n* // Remove the last value:\n* v = list.pop();\n* // returns 'beep'\n*/\nsetReadOnly( LinkedList.prototype, 'pop', function pop() {\n\t/* eslint-disable no-underscore-dangle */\n\tvar value;\n\tif ( this._length ) {\n\t\t// Retrieve the last value:\n\t\tvalue = this._last.value;\n\n\t\t// Check whether we have a new \"tail\" or whether we have emptied the list...\n\t\tif ( this._last._prev ) {\n\t\t\tthis._last = this._last._prev;\n\t\t\tthis._last._next = null;\n\t\t} else {\n\t\t\t// List is empty:\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t}\n\t\t// Decrement the list length:\n\t\tthis._length -= 1;\n\t}\n\treturn value;\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Adds a value to the end of the list.\n*\n* @name push\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {LinkedList} list instance\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Remove the last value:\n* var v = list.pop();\n* // returns 'bar'\n*\n* // Add a new value to the list:\n* list.push( 'beep' );\n*\n* // Remove the last value:\n* v = list.pop();\n* // returns 'beep'\n*/\nsetReadOnly( LinkedList.prototype, 'push', function push( value ) {\n\tvar node;\n\n\t// Create a new list node:\n\tnode = new Node( value );\n\n\t// Check whether the list is currently empty...\n\tif ( this._length === 0 ) {\n\t\t// This is the only list node, making it both the first and last node:\n\t\tthis._first = node;\n\t\tthis._last = node;\n\t} else {\n\t\t// Link the new node to the previous last node:\n\t\tnode._prev = this._last; // eslint-disable-line no-underscore-dangle\n\n\t\t// Link the previous last node to the new node:\n\t\tthis._last._next = node; // eslint-disable-line no-underscore-dangle\n\n\t\t// Update the pointer for the last node:\n\t\tthis._last = node;\n\t}\n\t// Increment the list length:\n\tthis._length += 1;\n\n\treturn this;\n});\n\n/**\n* Removes a list node from the list.\n*\n* @name remove\n* @memberof LinkedList.prototype\n* @type {Function}\n* @param {Node} node - node to remove\n* @throws {Error} must provide a node belonging to the list\n* @returns {(*|void)} removed value\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' ).push( 'beep' );\n*\n* // Determine the list length:\n* var len = list.length;\n* // returns 3\n*\n* // Get the second node:\n* var node = list.first().next;\n*\n* // Remove the second node:\n* var v = list.remove( node );\n* // returns 'bar'\n*\n* // Determine the list length:\n* len = list.length;\n* // returns 2\n*/\nsetReadOnly( LinkedList.prototype, 'remove', function remove( node ) {\n\t/* eslint-disable no-underscore-dangle */\n\tvar value;\n\tvar n;\n\n\t// Case: first node (equivalent to `shift()`)\n\tif ( node === this._first ) {\n\t\treturn this.shift();\n\t}\n\t// Case: last node (equivalent to `pop()`)\n\tif ( node === this._last ) {\n\t\treturn this.pop();\n\t}\n\t// Retrieve the node value:\n\tvalue = node.value;\n\n\t// Unfortunately, we need to check whether we have been provided a node belonging to our list by walking the list. If we don't, we could erroneously decrement the list length. This means our runtime goes from the theoretical O(1) to O(N).\n\tn = this._first;\n\twhile ( n !== this._last && n !== node ) {\n\t\tn = n._next;\n\t}\n\t// Check if we iterated through the entire list:\n\tif ( n === this._last ) {\n\t\tthrow new Error( 'invalid argument. The list does not contain the provided list node.' );\n\t}\n\t// Update pointers:\n\tnode._prev._next = node._next;\n\tnode._next._prev = node._prev;\n\n\t// Decrement the list length:\n\tthis._length -= 1;\n\n\treturn value;\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Removes a value from the beginning of the list.\n*\n* @name shift\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {(*|void)} removed value\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Remove the first value:\n* var v = list.shift();\n* // returns 'foo'\n*\n* // Add a new value to the list:\n* list.push( 'beep' );\n*\n* // Remove the first value:\n* v = list.shift();\n* // returns 'bar'\n*/\nsetReadOnly( LinkedList.prototype, 'shift', function shift() {\n\t/* eslint-disable no-underscore-dangle */\n\tvar value;\n\tif ( this._length ) {\n\t\t// Retrieve the first value:\n\t\tvalue = this._first.value;\n\n\t\t// Check whether we have a new \"head\" or whether we have emptied the list...\n\t\tif ( this._first._next ) {\n\t\t\tthis._first = this._first._next;\n\t\t\tthis._first._prev = null;\n\t\t} else {\n\t\t\t// List is empty:\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t}\n\t\t// Decrement the list length:\n\t\tthis._length -= 1;\n\t}\n\treturn value;\n\n\t/* eslint-enable no-underscore-dangle */\n});\n\n/**\n* Returns an array of list values.\n*\n* @name toArray\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {Array} list values\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Get an array of list values:\n* var vals = list.toArray();\n* // returns [ 'foo', 'bar' ]\n*/\nsetReadOnly( LinkedList.prototype, 'toArray', function toArray() {\n\tvar node;\n\tvar out;\n\tvar i;\n\n\tout = [];\n\tnode = this._first;\n\tfor ( i = 0; i < this._length; i++ ) {\n\t\tout.push( node.value );\n\t\tnode = node.next;\n\t}\n\treturn out;\n});\n\n/**\n* Serializes a list as JSON.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `LinkedList` instance.\n*\n* @name toJSON\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {Object} serialized list\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the list:\n* list.push( 'foo' ).push( 'bar' );\n*\n* // Serialize to JSON:\n* var o = list.toJSON();\n* // returns { 'type': 'linked-list', 'data': [ 'foo', 'bar' ] }\n*/\nsetReadOnly( LinkedList.prototype, 'toJSON', function toJSON() {\n\tvar out = {};\n\tout.type = 'linked-list';\n\tout.data = this.toArray();\n\treturn out;\n});\n\n/**\n* Adds a value to the beginning of the list.\n*\n* @name unshift\n* @memberof LinkedList.prototype\n* @type {Function}\n* @returns {LinkedList} list instance\n*\n* @example\n* var list = new LinkedList();\n*\n* // Add values to the beginning of the list:\n* list.unshift( 'foo' ).unshift( 'bar' );\n*\n* // Remove the last value:\n* var v = list.pop();\n* // returns 'foo'\n*\n* // Add a new value to the beginning of the list:\n* list.unshift( 'beep' );\n*\n* // Remove the last value:\n* v = list.pop();\n* // returns 'bar'\n*/\nsetReadOnly( LinkedList.prototype, 'unshift', function unshift( value ) {\n\tvar node;\n\n\t// Create a new list node:\n\tnode = new Node( value );\n\n\t// Check whether the list is currently empty...\n\tif ( this._length === 0 ) {\n\t\t// This is the only list node, making it both the first and last node:\n\t\tthis._first = node;\n\t\tthis._last = node;\n\t} else {\n\t\t// Link the new node to the previous first node:\n\t\tnode._next = this._first; // eslint-disable-line no-underscore-dangle\n\n\t\t// Link the previous first node to the new node:\n\t\tthis._first._prev = node; // eslint-disable-line no-underscore-dangle\n\n\t\t// Update the pointer for the first node:\n\t\tthis._first = node;\n\t}\n\t// Increment the list length:\n\tthis._length += 1;\n\n\treturn this;\n});\n\n\n// EXPORTS //\n\nexport default LinkedList;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if an array contains a provided value.\n*\n* @private\n* @param {Array} arr - array\n* @param {*} v - search value\n* @returns {boolean} boolean indicating if an array contains a search value\n*/\nfunction contains( arr, v ) {\n\tvar i;\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tif ( arr[ i ] === v ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nexport default contains;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIteratorMap( it, clbk, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\tvar i;\n\n\tout = [];\n\ti = -1;\n\twhile ( true ) {\n\t\ti += 1;\n\t\tv = it.next();\n\t\tz = v.value;\n\t\tif ( z ) {\n\t\t\tz = clbk.call( thisArg, z, i );\n\t\t\tif ( !isCollection( z ) ) {\n\t\t\t\treturn new TypeError( format( 'invalid argument. Callback must return an array-like object containing vertices. Value: `%s`.', z ) );\n\t\t\t}\n\t\t\tout.push( z );\n\t\t}\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIteratorMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIterator( it ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\n\tout = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tz = v.value;\n\t\tif ( z ) {\n\t\t\tif ( !isCollection( z ) ) {\n\t\t\t\treturn new TypeError( format( 'invalid argument. An iterator must return an array-like object containing vertices. Value: `%s`.', z ) );\n\t\t\t}\n\t\t\tout.push( z );\n\t\t}\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIteratorMap( it, clbk, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\tvar i;\n\n\tout = [];\n\ti = -1;\n\twhile ( true ) {\n\t\ti += 1;\n\t\tv = it.next();\n\t\tz = v.value;\n\t\tif ( z ) {\n\t\t\tz = clbk.call( thisArg, z, i );\n\t\t\tif ( !isCollection( z ) ) {\n\t\t\t\treturn new TypeError( format( 'invalid argument. Callback must return an array-like object containing vertices. Value: `%s`.', z ) );\n\t\t\t}\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t}\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIteratorMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert/is-collection';\nimport format from '@stdlib/string/format';\n\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {(Array|TypeError)} array or an error\n*/\nfunction fromIterator( it ) {\n\tvar out;\n\tvar v;\n\tvar z;\n\n\tout = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tz = v.value;\n\t\tif ( z ) {\n\t\t\tif ( !isCollection( z ) ) {\n\t\t\t\treturn new TypeError( format( 'invalid argument. An iterator must return an array-like object containing vertices. Value: `%s`.', z ) );\n\t\t\t}\n\t\t\tout.push( z[ 0 ], z[ 1 ] );\n\t\t}\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Sets a bit.\n*\n* @private\n* @param {integer32} value - integer value\n* @param {NonNegativeInteger} i - bit to set\n* @returns {integer32} updated integer value\n*\n* @example\n* var v = setBit( 0, 2 );\n* // returns 4\n*/\nfunction setBit( value, i ) {\n\tvalue |= 1 << i;\n\treturn value;\n}\n\n\n// EXPORTS //\n\nexport default setBit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Clears a bit.\n*\n* @private\n* @param {integer32} value - integer value\n* @param {NonNegativeInteger} i - bit to clear\n* @returns {integer32} updated integer value\n*\n* @example\n* var v = clearBit( 5, 2 );\n* // returns 1\n*/\nfunction clearBit( value, i ) {\n\tvalue &= ~( 1 << i );\n\treturn value;\n}\n\n\n// EXPORTS //\n\nexport default clearBit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert/is-plain-object';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport dtypes from '@stdlib/array/typed-dtypes';\nimport format from '@stdlib/string/format';\nimport contains from './contains.js';\n\n\n// VARIABLES //\n\nvar DTYPES = dtypes();\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.dtype] - default data type\n* @param {string} [options.name] - tuple name\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'dtype': 'float64',\n*     'name': 'Complex128'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'dtype' ) ) {\n\t\topts.dtype = options.dtype;\n\t\tif ( !isString( opts.dtype ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'dtype', opts.dtype ) );\n\t\t}\n\t\tif ( !contains( DTYPES, opts.dtype ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a recognized data type. Option: `%s`.', 'dtype', opts.dtype ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'name' ) ) {\n\t\topts.name = options.name;\n\t\tif ( !isString( opts.name ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'name', opts.name ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Specifies a sort order for ordering numeric values in ascending order.\n*\n* ## Notes\n*\n* -   If `a < b`, then function returns a number less than `0`, which specifies to sort `a` to an index lower than `b`.\n* -   If `a > b`, then function returns a number greater than `0`, which specifies to sort `a` to an index higher than `b`.\n* -   If `a == b`, then function returns `0`, which specifies that the order of `a` and `b` should remain unchanged (not guaranteed).\n*\n* @private\n* @param {number} a - first value\n* @param {number} b - second value\n* @returns {number} difference between `a` and `b`\n*/\nfunction ascending( a, b ) {\n\treturn a - b;\n}\n\n\n// EXPORTS //\n\nexport default ascending;\n","/* eslint-disable max-len, max-lines */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { primitives as isStringArray } from '@stdlib/assert/is-string-array';\nimport { isPrimitive as isString } from '@stdlib/assert/is-string';\nimport isArrayBuffer from '@stdlib/assert/is-arraybuffer';\nimport isFunction from '@stdlib/assert/is-function';\nimport { isPrimitive as isInteger } from '@stdlib/assert/is-integer';\nimport isObject from '@stdlib/assert/is-object';\nimport isCollection from '@stdlib/assert/is-collection';\nimport hasOwnProp from '@stdlib/assert/has-own-property';\nimport hasIteratorSymbolSupport from '@stdlib/assert/has-iterator-symbol-support';\nimport propertiesIn from '@stdlib/utils/properties-in';\nimport typedarray from '@stdlib/array/typed';\nimport Int8Array from '@stdlib/array/int8';\nimport getDtype from '@stdlib/array/dtype';\nimport defineProperty from '@stdlib/utils/define-property';\nimport setNonEnumerableProperty from '@stdlib/utils/define-nonenumerable-property';\nimport setNonEnumerableReadOnlyAccessor from '@stdlib/utils/define-nonenumerable-read-only-accessor'; // eslint-disable-line id-length\nimport setNonEnumerableReadWriteAccessor from '@stdlib/utils/define-nonenumerable-read-write-accessor'; // eslint-disable-line id-length\nimport floor from '@stdlib/math/base/special/floor';\nimport ITERATOR_SYMBOL from '@stdlib/symbol/iterator';\nimport format from '@stdlib/string/format';\nimport contains from './contains.js';\nimport hasDistinctElements from './has_distinct_elements.js';\nimport validate from './validate.js';\nimport ascending from './ascending.js';\nimport fromIterator from './from_iterator.js';\nimport fromIteratorMap from './from_iterator_map.js';\n\n\n// VARIABLES //\n\nvar RESERVED_PROPS = propertiesIn( new Int8Array( 0 ) );\nvar HAS_ITERATOR_SYMBOL = hasIteratorSymbolSupport();\n\n\n// MAIN //\n\n/**\n* Returns a named typed tuple factory.\n*\n* @param {StringArray} names - field (property) names\n* @param {Options} [options] - options\n* @param {string} [options.dtype=\"float64\"] - default data type\n* @param {string} [options.name=\"tuple\"] - tuple name\n* @throws {TypeError} must provide an array of strings\n* @throws {TypeError} must provide distinct field names\n* @throws {Error} cannot provide a reserved field (property) name\n* @throws {TypeError} must provide valid options\n* @throws {Error} must provide a recognized data type\n* @returns {Function} factory function\n*\n* @example\n* var point = factory( [ 'x', 'y' ] );\n*\n* var p = point( [ 1.0, -1.0 ] );\n*\n* var x = p[ 0 ];\n* // returns 1.0\n*\n* x = p.x;\n* // returns 1.0\n*\n* var y = p[ 1 ];\n* // returns -1.0\n*\n* y = p.y;\n* // returns -1.0\n*/\nfunction factory( names, options ) { // eslint-disable-line max-lines-per-function, stdlib/jsdoc-require-throws-tags\n\tvar nfields;\n\tvar fields;\n\tvar opts;\n\tvar err;\n\tvar i;\n\tif ( !isStringArray( names ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide an array of strings. Value: `%s`.', names ) );\n\t}\n\tif ( !hasDistinctElements( names ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Field names must be distinct. Value: `%s`.', names ) );\n\t}\n\tfields = names.slice();\n\tnfields = fields.length;\n\tfor ( i = 0; i < nfields; i++ ) {\n\t\tif ( contains( RESERVED_PROPS, fields[ i ] ) ) {\n\t\t\tthrow new Error( format( 'invalid argument. Provided field name is reserved. Name: `%s`.', fields[ i ] ) );\n\t\t}\n\t}\n\topts = {\n\t\t'dtype': 'float64',\n\t\t'name': 'tuple'\n\t};\n\tif ( arguments.length > 1 ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t* Returns a named typed tuple.\n\t*\n\t* @private\n\t* @param {(TypedArray|ArrayLikeObject|ArrayBuffer|Iterable)} [arg] - a typed array, array-like object, buffer, or an iterable\n\t* @param {NonNegativeInteger} [byteOffset=0] - byte offset\n\t* @param {string} [dtype] - data type\n\t* @throws {TypeError} must provide a recognized data type\n\t* @throws {RangeError} arguments must be compatible with tuple length\n\t* @returns {TypedArray} named typed tuple\n\t*/\n\tfunction namedtypedtuple() { // eslint-disable-line max-lines-per-function\n\t\tvar indices;\n\t\tvar dtype;\n\t\tvar nargs;\n\t\tvar tuple;\n\t\tvar i;\n\n\t\tnargs = arguments.length;\n\t\tif ( nargs <= 0 ) {\n\t\t\ttuple = typedarray( nfields, opts.dtype );\n\t\t} else if ( nargs === 1 ) {\n\t\t\tif ( isString( arguments[ 0 ] ) ) {\n\t\t\t\t// Arguments: [ dtype ]\n\t\t\t\ttuple = typedarray( nfields, arguments[ 0 ] );\n\t\t\t} else if ( isArrayBuffer( arguments[ 0 ] ) ) {\n\t\t\t\t// Arguments: [ ArrayBuffer ]\n\t\t\t\ttuple = typedarray( arguments[ 0 ], 0, nfields, opts.dtype );\n\t\t\t} else {\n\t\t\t\t// Arguments: [ TypedArray|ArrayLikeObject|Iterable ]\n\t\t\t\ttuple = typedarray( arguments[ 0 ], opts.dtype );\n\t\t\t}\n\t\t} else if ( nargs === 2 ) {\n\t\t\tif ( isArrayBuffer( arguments[ 0 ] ) ) {\n\t\t\t\tif ( isString( arguments[ 1 ] ) ) {\n\t\t\t\t\t// Arguments: [ ArrayBuffer, dtype ]\n\t\t\t\t\ttuple = typedarray( arguments[ 0 ], 0, nfields, arguments[ 1 ] );\n\t\t\t\t} else {\n\t\t\t\t\t// Arguments: [ ArrayBuffer, byteOffset ]\n\t\t\t\t\ttuple = typedarray( arguments[ 0 ], arguments[ 1 ], nfields, opts.dtype );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Arguments: [ TypedArray|ArrayLikeObject|Iterable, dtype ]\n\t\t\t\ttuple = typedarray( arguments[ 0 ], arguments[ 1 ] );\n\t\t\t}\n\t\t} else {\n\t\t\t// Arguments: [ ArrayBuffer, byteOffset, dtype ]\n\t\t\ttuple = typedarray( arguments[ 0 ], arguments[ 1 ], nfields, arguments[ 2 ] );\n\t\t}\n\t\tif ( tuple.length !== nfields ) {\n\t\t\tthrow new RangeError( format( 'invalid arguments. Arguments are incompatible with the number of tuple fields. Number of fields: `%u`. Number of data elements: `%u`.', nfields, tuple.length ) );\n\t\t}\n\t\tdtype = getDtype( tuple );\n\n\t\tindices = []; // indirect index look-up table\n\t\tfor ( i = 0; i < nfields; i++ ) {\n\t\t\tindices.push( i );\n\t\t\tsetNonEnumerableReadWriteAccessor( tuple, fields[ i ], getter( i ), setter( i ) );\n\t\t}\n\t\tsetNonEnumerableProperty( tuple, 'name', opts.name );\n\t\tsetNonEnumerableReadOnlyAccessor( tuple, 'fields', getFields );\n\t\tsetNonEnumerableReadOnlyAccessor( tuple, 'orderedFields', orderedFields );\n\n\t\t// Note: keep in alphabetical order\n\t\tsetNonEnumerableProperty( tuple, 'entries', entries );\n\t\tsetNonEnumerableProperty( tuple, 'every', every );\n\t\tsetNonEnumerableProperty( tuple, 'fieldOf', fieldOf );\n\t\tsetNonEnumerableProperty( tuple, 'filter', filter );\n\t\tsetNonEnumerableProperty( tuple, 'find', find );\n\t\tsetNonEnumerableProperty( tuple, 'findIndex', findIndex );\n\t\tsetNonEnumerableProperty( tuple, 'findField', findField );\n\t\tsetNonEnumerableProperty( tuple, 'forEach', forEach );\n\t\tsetNonEnumerableProperty( tuple, 'ind2key', ind2key );\n\t\tsetNonEnumerableProperty( tuple, 'key2ind', key2ind );\n\t\tsetNonEnumerableProperty( tuple, 'keys', keys );\n\t\tsetNonEnumerableProperty( tuple, 'lastFieldOf', lastFieldOf );\n\t\tsetNonEnumerableProperty( tuple, 'map', map );\n\t\tsetNonEnumerableProperty( tuple, 'reduce', reduce );\n\t\tsetNonEnumerableProperty( tuple, 'reduceRight', reduceRight );\n\t\tsetNonEnumerableProperty( tuple, 'reverse', reverse );\n\t\tsetNonEnumerableProperty( tuple, 'slice', slice );\n\t\tsetNonEnumerableProperty( tuple, 'some', some );\n\t\tsetNonEnumerableProperty( tuple, 'sort', sort );\n\t\tsetNonEnumerableProperty( tuple, 'subtuple', subtuple );\n\t\tsetNonEnumerableProperty( tuple, 'toJSON', toJSON );\n\t\tsetNonEnumerableProperty( tuple, 'toLocaleString', toLocaleString );\n\t\tsetNonEnumerableProperty( tuple, 'toString', toString );\n\n\t\treturn tuple;\n\n\t\t/**\n\t\t* Returns an accessor to retrieve a tuple value.\n\t\t*\n\t\t* @private\n\t\t* @param {NonNegativeInteger} i - tuple index\n\t\t* @returns {Function} accessor\n\t\t*/\n\t\tfunction getter( i ) {\n\t\t\treturn get;\n\n\t\t\t/**\n\t\t\t* Returns a tuple value.\n\t\t\t*\n\t\t\t* @private\n\t\t\t* @returns {number} tuple value\n\t\t\t*/\n\t\t\tfunction get() {\n\t\t\t\treturn tuple[ indices[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t* Returns an accessor to set a tuple value.\n\t\t*\n\t\t* @private\n\t\t* @param {NonNegativeInteger} i - tuple index\n\t\t* @returns {Function} accessor\n\t\t*/\n\t\tfunction setter( i ) {\n\t\t\treturn set;\n\n\t\t\t/**\n\t\t\t* Sets a tuple value.\n\t\t\t*\n\t\t\t* @private\n\t\t\t* @param {number} v - value to set\n\t\t\t*/\n\t\t\tfunction set( v ) {\n\t\t\t\ttuple[ indices[ i ] ] = v;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t* Returns the list of tuple fields.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @returns {StringArray} tuple fields\n\t\t*/\n\t\tfunction getFields() {\n\t\t\treturn fields.slice();\n\t\t}\n\n\t\t/**\n\t\t* Returns the list of tuple fields in index order.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @returns {StringArray} tuple fields\n\t\t*/\n\t\tfunction orderedFields() {\n\t\t\tvar out;\n\t\t\tvar i;\n\t\t\tout = fields.slice();\n\t\t\tfor ( i = 0; i < nfields; i++ ) {\n\t\t\t\tout[ i ] = fields[ indices[i] ];\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\n\t\t// Note: keep functions which follow in alphabetical order\n\n\t\t/**\n\t\t* Returns an iterator for iterating over tuple key-value pairs.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @returns {Iterator} iterator\n\t\t*/\n\t\tfunction entries() {\n\t\t\tvar self;\n\t\t\tvar iter;\n\t\t\tvar FLG;\n\t\t\tvar i;\n\n\t\t\tself = this; // eslint-disable-line no-invalid-this\n\t\t\tif ( self !== tuple ) {\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\n\t\t\t// Initialize the iteration index:\n\t\t\ti = -1;\n\n\t\t\t// Create an iterator protocol-compliant object:\n\t\t\titer = {};\n\t\t\tdefineProperty( iter, 'next', {\n\t\t\t\t'configurable': false,\n\t\t\t\t'enumerable': false,\n\t\t\t\t'writable': false,\n\t\t\t\t'value': next\n\t\t\t});\n\t\t\tdefineProperty( iter, 'return', {\n\t\t\t\t'configurable': false,\n\t\t\t\t'enumerable': false,\n\t\t\t\t'writable': false,\n\t\t\t\t'value': end\n\t\t\t});\n\t\t\tif ( HAS_ITERATOR_SYMBOL ) {\n\t\t\t\tdefineProperty( iter, ITERATOR_SYMBOL, {\n\t\t\t\t\t'configurable': false,\n\t\t\t\t\t'enumerable': false,\n\t\t\t\t\t'writable': false,\n\t\t\t\t\t'value': factory\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn iter;\n\n\t\t\t/**\n\t\t\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t\t\t*\n\t\t\t* @private\n\t\t\t* @returns {Object} iterator protocol-compliant object\n\t\t\t*/\n\t\t\tfunction next() {\n\t\t\t\ti += 1;\n\t\t\t\tif ( FLG || i >= nfields ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t'done': true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t'value': [ i, fields[ indices[ i ] ], tuple[ i ] ],\n\t\t\t\t\t'done': false\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/**\n\t\t\t* Finishes an iterator.\n\t\t\t*\n\t\t\t* @private\n\t\t\t* @param {*} [value] - value to return\n\t\t\t* @returns {Object} iterator protocol-compliant object\n\t\t\t*/\n\t\t\tfunction end( value ) {\n\t\t\t\tFLG = true;\n\t\t\t\tif ( arguments.length ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t'value': value,\n\t\t\t\t\t\t'done': true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t'done': true\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/**\n\t\t\t* Returns a new iterator.\n\t\t\t*\n\t\t\t* @private\n\t\t\t* @returns {Iterator} iterator\n\t\t\t*/\n\t\t\tfunction factory() {\n\t\t\t\treturn self.entries();\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t* Tests whether all tuple elements pass a test implemented by a predicate function.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @param {Function} predicate - predicate function\n\t\t* @param {*} [thisArg] - execution context\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @throws {TypeError} first argument must be a function\n\t\t* @returns {boolean} boolean indicating if all elements pass\n\t\t*/\n\t\tfunction every( predicate, thisArg ) {\n\t\t\tvar bool;\n\t\t\tvar i;\n\t\t\tif ( this !== tuple ) { // eslint-disable-line no-invalid-this\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\t\t\tif ( !isFunction( predicate ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t\t\t}\n\t\t\tfor ( i = 0; i < nfields; i++ ) {\n\t\t\t\tbool = predicate.call( thisArg, tuple[ i ], i, fields[ indices[i] ], tuple );\n\t\t\t\tif ( !bool ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n\t\t* Returns the field of the first tuple element strictly equal to a search element.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   The function does not distinguish between signed and unsigned zero.\n\t\t* -   If unable to locate a search element, the function returns `undefined`.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @param {*} searchElement - search element\n\t\t* @param {integer} [fromIndex=0] - tuple index from which to begin searching\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @throws {TypeError} second argument must be an integer\n\t\t* @returns {(string|void)} tuple field name or `undefined`\n\t\t*/\n\t\tfunction fieldOf( searchElement ) {\n\t\t\tvar i;\n\t\t\tif ( this !== tuple ) { // eslint-disable-line no-invalid-this\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\t\t\tif ( arguments.length > 1 ) {\n\t\t\t\ti = arguments[ 0 ];\n\t\t\t\tif ( !isInteger( i ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', i ) );\n\t\t\t\t}\n\t\t\t\tif ( i >= nfields ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif ( i < 0 ) {\n\t\t\t\t\ti = nfields + i;\n\t\t\t\t\tif ( i < 0 ) {\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ti = 0;\n\t\t\t}\n\t\t\tfor ( ; i < nfields; i++ ) {\n\t\t\t\tif ( tuple[ i ] === searchElement ) {\n\t\t\t\t\treturn fields[ indices[ i ] ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t* Creates a new tuple which includes those elements for which a predicate function returns a truthy value.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   The returned tuple has the same data type as the host tuple.\n\t\t* -   If a predicate function does not return a truthy value for any tuple element, the function returns `null`.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @param {Function} predicate - filter (predicate) function\n\t\t* @param {*} [thisArg] - execution context\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @throws {TypeError} first argument must be a function\n\t\t* @returns {(TypedArray|null)} new tuple\n\t\t*/\n\t\tfunction filter( predicate, thisArg ) {\n\t\t\tvar bool;\n\t\t\tvar tmp;\n\t\t\tvar f;\n\t\t\tvar i;\n\t\t\tif ( this !== tuple ) { // eslint-disable-line no-invalid-this\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\t\t\tif ( !isFunction( predicate ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t\t\t}\n\t\t\ttmp = [];\n\t\t\tf = [];\n\t\t\tfor ( i = 0; i < nfields; i++ ) {\n\t\t\t\tbool = predicate.call( thisArg, tuple[ i ], i, fields[ indices[i] ], tuple );\n\t\t\t\tif ( bool ) {\n\t\t\t\t\tf.push( fields[ indices[i] ] );\n\t\t\t\t\ttmp.push( tuple[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( f.length === nfields ) {\n\t\t\t\treturn namedtypedtuple( tmp, dtype );\n\t\t\t}\n\t\t\tif ( f.length ) {\n\t\t\t\treturn factory( f, opts )( tmp );\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t* Returns the first tuple element for which a provided predicate function returns a truthy value.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @param {Function} predicate - predicate function\n\t\t* @param {*} [thisArg] - execution context\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @throws {TypeError} first argument must be a function\n\t\t* @returns {(number|void)} tuple element\n\t\t*/\n\t\tfunction find( predicate, thisArg ) {\n\t\t\tvar bool;\n\t\t\tvar i;\n\t\t\tif ( this !== tuple ) { // eslint-disable-line no-invalid-this\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\t\t\tif ( !isFunction( predicate ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t\t\t}\n\t\t\tfor ( i = 0; i < nfields; i++ ) {\n\t\t\t\tbool = predicate.call( thisArg, tuple[ i ], i, fields[ indices[i] ], tuple );\n\t\t\t\tif ( bool ) {\n\t\t\t\t\treturn tuple[ i ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t* Returns the field of the first tuple element for which a provided predicate function returns a truthy value.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   If the predicate function never returns a truthy value, the function returns `undefined`.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @param {Function} predicate - predicate function\n\t\t* @param {*} [thisArg] - execution context\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @throws {TypeError} first argument must be a function\n\t\t* @returns {(string|void)} tuple field name or `undefined`\n\t\t*/\n\t\tfunction findField( predicate, thisArg ) {\n\t\t\tvar bool;\n\t\t\tvar f;\n\t\t\tvar i;\n\t\t\tif ( this !== tuple ) { // eslint-disable-line no-invalid-this\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\t\t\tif ( !isFunction( predicate ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t\t\t}\n\t\t\tfor ( i = 0; i < nfields; i++ ) {\n\t\t\t\tf = fields[ indices[ i ] ];\n\t\t\t\tbool = predicate.call( thisArg, tuple[ i ], i, f, tuple );\n\t\t\t\tif ( bool ) {\n\t\t\t\t\treturn f;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t* Returns the index of the first tuple element for which a provided predicate function returns a truthy value.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   If the predicate function never returns a truthy value, the function returns `-1`.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @param {Function} predicate - predicate function\n\t\t* @param {*} [thisArg] - execution context\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @throws {TypeError} first argument must be a function\n\t\t* @returns {integer} tuple index or `-1`\n\t\t*/\n\t\tfunction findIndex( predicate, thisArg ) {\n\t\t\tvar bool;\n\t\t\tvar i;\n\t\t\tif ( this !== tuple ) { // eslint-disable-line no-invalid-this\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\t\t\tif ( !isFunction( predicate ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t\t\t}\n\t\t\tfor ( i = 0; i < nfields; i++ ) {\n\t\t\t\tbool = predicate.call( thisArg, tuple[ i ], i, fields[ indices[i] ], tuple );\n\t\t\t\tif ( bool ) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\n\t\t/**\n\t\t* Invokes a callback for each tuple element.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @param {Function} fcn - function to invoke\n\t\t* @param {*} [thisArg] - execution context\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @throws {TypeError} first argument must be a function\n\t\t*/\n\t\tfunction forEach( fcn, thisArg ) {\n\t\t\tvar i;\n\t\t\tif ( this !== tuple ) { // eslint-disable-line no-invalid-this\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t\t\t}\n\t\t\tfor ( i = 0; i < nfields; i++ ) {\n\t\t\t\tfcn.call( thisArg, tuple[ i ], i, fields[ indices[i] ], tuple );\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t* Converts a tuple index to a field name.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   If provided an out-of-bounds index, the function returns `undefined`.\n\t\t* -   If provided a negative tuple index, the function resolves the index relative to the last tuple element.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @param {integer} ind - tuple index\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @throws {TypeError} must provide an integer\n\t\t* @returns {(string|void)} field name or undefined\n\t\t*/\n\t\tfunction ind2key( ind ) {\n\t\t\tif ( this !== tuple ) { // eslint-disable-line no-invalid-this\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\t\t\tif ( !isInteger( ind ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Must provide an integer. Value: `%s`.', ind ) );\n\t\t\t}\n\t\t\tif ( ind < 0 ) {\n\t\t\t\tind = nfields + ind;\n\t\t\t}\n\t\t\tif ( ind < 0 || ind >= nfields ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn fields[ indices[ ind ] ];\n\t\t}\n\n\t\t/**\n\t\t* Converts a field name to a tuple index.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   If provided an unknown field name, the function returns `-1`.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @param {string} key - field name\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @throws {TypeError} first argument must be a string\n\t\t* @returns {integer} tuple index\n\t\t*/\n\t\tfunction key2ind( key ) {\n\t\t\tvar i;\n\t\t\tif ( this !== tuple ) { // eslint-disable-line no-invalid-this\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\t\t\tif ( !isString( key ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', key ) );\n\t\t\t}\n\t\t\tfor ( i = 0; i < nfields; i++ ) {\n\t\t\t\tif ( fields[ indices[i] ] === key ) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\n\t\t/**\n\t\t* Returns an iterator for iterating over tuple keys.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @returns {Iterator} iterator\n\t\t*/\n\t\tfunction keys() {\n\t\t\tvar self;\n\t\t\tvar iter;\n\t\t\tvar FLG;\n\t\t\tvar i;\n\n\t\t\tself = this; // eslint-disable-line no-invalid-this\n\t\t\tif ( self !== tuple ) {\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\n\t\t\t// Initialize the iteration index:\n\t\t\ti = -1;\n\n\t\t\t// Create an iterator protocol-compliant object:\n\t\t\titer = {};\n\t\t\tdefineProperty( iter, 'next', {\n\t\t\t\t'configurable': false,\n\t\t\t\t'enumerable': false,\n\t\t\t\t'writable': false,\n\t\t\t\t'value': next\n\t\t\t});\n\t\t\tdefineProperty( iter, 'return', {\n\t\t\t\t'configurable': false,\n\t\t\t\t'enumerable': false,\n\t\t\t\t'writable': false,\n\t\t\t\t'value': end\n\t\t\t});\n\t\t\tif ( HAS_ITERATOR_SYMBOL ) {\n\t\t\t\tdefineProperty( iter, ITERATOR_SYMBOL, {\n\t\t\t\t\t'configurable': false,\n\t\t\t\t\t'enumerable': false,\n\t\t\t\t\t'writable': false,\n\t\t\t\t\t'value': factory\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn iter;\n\n\t\t\t/**\n\t\t\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t\t\t*\n\t\t\t* @private\n\t\t\t* @returns {Object} iterator protocol-compliant object\n\t\t\t*/\n\t\t\tfunction next() {\n\t\t\t\ti += 1;\n\t\t\t\tif ( FLG || i >= nfields ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t'done': true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t'value': [ i, fields[ indices[ i ] ] ],\n\t\t\t\t\t'done': false\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/**\n\t\t\t* Finishes an iterator.\n\t\t\t*\n\t\t\t* @private\n\t\t\t* @param {*} [value] - value to return\n\t\t\t* @returns {Object} iterator protocol-compliant object\n\t\t\t*/\n\t\t\tfunction end( value ) {\n\t\t\t\tFLG = true;\n\t\t\t\tif ( arguments.length ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t'value': value,\n\t\t\t\t\t\t'done': true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t'done': true\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/**\n\t\t\t* Returns a new iterator.\n\t\t\t*\n\t\t\t* @private\n\t\t\t* @returns {Iterator} iterator\n\t\t\t*/\n\t\t\tfunction factory() {\n\t\t\t\treturn self.keys();\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t* Returns the field of the last tuple element strictly equal to a search element, iterating from right to left.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   The function does not distinguish between signed and unsigned zero.\n\t\t* -   If unable to locate a search element, the function returns `undefined`.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @param {*} searchElement - search element\n\t\t* @param {integer} [fromIndex=-1] - tuple index from which to begin searching\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @throws {TypeError} second argument must be an integer\n\t\t* @returns {(string|void)} tuple field name or `undefined`\n\t\t*/\n\t\tfunction lastFieldOf( searchElement ) {\n\t\t\tvar i;\n\t\t\tif ( this !== tuple ) { // eslint-disable-line no-invalid-this\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\t\t\tif ( arguments.length > 1 ) {\n\t\t\t\ti = arguments[ 1 ];\n\t\t\t\tif ( !isInteger( i ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', i ) );\n\t\t\t\t}\n\t\t\t\tif ( i >= nfields ) {\n\t\t\t\t\ti = nfields - 1;\n\t\t\t\t} else if ( i < 0 ) {\n\t\t\t\t\ti = nfields + i;\n\t\t\t\t\tif ( i < 0 ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ti = nfields - 1;\n\t\t\t}\n\t\t\tfor ( ; i >= 0; i-- ) {\n\t\t\t\tif ( tuple[ i ] === searchElement ) {\n\t\t\t\t\treturn fields[ indices[ i ] ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t* Maps each tuple element to an element in a new tuple.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   The returned tuple has the same data type as the host tuple.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @param {Function} fcn - map function\n\t\t* @param {*} [thisArg] - execution context\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @throws {TypeError} first argument must be a function\n\t\t* @returns {TypedArray} new tuple\n\t\t*/\n\t\tfunction map( fcn, thisArg ) {\n\t\t\tvar out;\n\t\t\tvar i;\n\t\t\tif ( this !== tuple ) { // eslint-disable-line no-invalid-this\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t\t\t}\n\t\t\tout = namedtypedtuple( dtype );\n\t\t\tfor ( i = 0; i < nfields; i++ ) {\n\t\t\t\tout[ i ] = fcn.call( thisArg, tuple[ i ], i, fields[ indices[i] ], tuple );\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\n\t\t/**\n\t\t* Applies a function against an accumulator and each element in a tuple and returns the accumulated result.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @param {Function} fcn - reduction function\n\t\t* @param {*} [initial] - initial value\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @throws {TypeError} first argument must be a function\n\t\t* @returns {*} accumulated result\n\t\t*/\n\t\tfunction reduce( fcn ) {\n\t\t\tvar acc;\n\t\t\tvar i;\n\t\t\tif ( this !== tuple ) { // eslint-disable-line no-invalid-this\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t\t\t}\n\t\t\tif ( arguments.length > 1 ) {\n\t\t\t\tacc = arguments[ 1 ];\n\t\t\t\ti = 0;\n\t\t\t} else {\n\t\t\t\tacc = tuple[ 0 ];\n\t\t\t\ti = 1;\n\t\t\t}\n\t\t\tfor ( ; i < nfields; i++ ) {\n\t\t\t\tacc = fcn( acc, tuple[ i ], i, fields[ indices[i] ], tuple );\n\t\t\t}\n\t\t\treturn acc;\n\t\t}\n\n\t\t/**\n\t\t* Applies a function against an accumulator and each element in a tuple and returns the accumulated result, iterating from right to left.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @param {Function} fcn - reduction function\n\t\t* @param {*} [initial] - initial value\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @throws {TypeError} first argument must be a function\n\t\t* @returns {*} accumulated result\n\t\t*/\n\t\tfunction reduceRight( fcn ) {\n\t\t\tvar acc;\n\t\t\tvar i;\n\t\t\tif ( this !== tuple ) { // eslint-disable-line no-invalid-this\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t\t\t}\n\t\t\tif ( arguments.length > 1 ) {\n\t\t\t\tacc = arguments[ 1 ];\n\t\t\t\ti = nfields - 1;\n\t\t\t} else {\n\t\t\t\tacc = tuple[ nfields-1 ];\n\t\t\t\ti = nfields - 2;\n\t\t\t}\n\t\t\tfor ( ; i >= 0; i-- ) {\n\t\t\t\tacc = fcn( acc, tuple[ i ], i, fields[ indices[i] ], tuple );\n\t\t\t}\n\t\t\treturn acc;\n\t\t}\n\n\t\t/**\n\t\t* Reverses a tuple **in-place**.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @returns {TypedArray} reversed tuple\n\t\t*/\n\t\tfunction reverse() {\n\t\t\tvar tmp;\n\t\t\tvar i;\n\t\t\tvar j;\n\t\t\tif ( this !== tuple ) { // eslint-disable-line no-invalid-this\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\t\t\tfor ( i = 0; i < floor( nfields/2 ); i++ ) {\n\t\t\t\tj = nfields - i - 1;\n\t\t\t\ttmp = tuple[ i ];\n\t\t\t\ttuple[ i ] = tuple[ j ];\n\t\t\t\ttuple[ j ] = tmp;\n\t\t\t}\n\t\t\t// Because the indices are bounded [0,nfields), we can use simple arithmetic to \"reverse\" index values in-place...\n\t\t\tfor ( i = 0; i < nfields; i++ ) {\n\t\t\t\tindices[ i ] = nfields - indices[ i ] - 1;\n\t\t\t}\n\t\t\treturn tuple;\n\t\t}\n\n\t\t/**\n\t\t* Copies elements to a new tuple with the same underlying data type as the host tuple.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   If the function is unable to resolve indices to a non-empty tuple subsequence, the function returns `null`.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @param {integer} [begin=0] - start element index (inclusive)\n\t\t* @param {integer} [end=tuple.length] - end element index (exclusive)\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @throws {TypeError} first argument must be an integer\n\t\t* @throws {TypeError} second argument must be an integer\n\t\t* @returns {(TypedArray|null)} new tuple\n\t\t*/\n\t\tfunction slice( begin, end ) {\n\t\t\tvar tmp;\n\t\t\tvar f;\n\t\t\tvar i;\n\t\t\tvar j;\n\n\t\t\tif ( this !== tuple ) { // eslint-disable-line no-invalid-this\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\t\t\tif ( arguments.length === 0 ) {\n\t\t\t\treturn namedtypedtuple( tuple, dtype );\n\t\t\t}\n\t\t\ti = begin;\n\t\t\tif ( !isInteger( i ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', begin ) );\n\t\t\t}\n\t\t\tif ( i < 0 ) {\n\t\t\t\ti = nfields + i;\n\t\t\t\tif ( i < 0 ) {\n\t\t\t\t\ti = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( arguments.length === 1 ) {\n\t\t\t\tj = nfields;\n\t\t\t} else {\n\t\t\t\tj = end;\n\t\t\t\tif ( !isInteger( j ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', end ) );\n\t\t\t\t}\n\t\t\t\tif ( j < 0 ) {\n\t\t\t\t\tj = nfields + j;\n\t\t\t\t\tif ( j < 0 ) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t}\n\t\t\t\t} else if ( j > nfields ) {\n\t\t\t\t\tj = nfields;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( i >= j ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tf = [];\n\t\t\ttmp = [];\n\t\t\tfor ( ; i < j; i++ ) {\n\t\t\t\tf.push( fields[ indices[i] ] );\n\t\t\t\ttmp.push( tuple[ i ] );\n\t\t\t}\n\t\t\treturn factory( f, opts )( tmp, dtype );\n\t\t}\n\n\t\t/**\n\t\t* Tests whether at least one tuple element passes a test implemented by a predicate function.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @param {Function} predicate - predicate function\n\t\t* @param {*} [thisArg] - execution context\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @throws {TypeError} first argument must be a function\n\t\t* @returns {boolean} boolean indicating if at least one element passes\n\t\t*/\n\t\tfunction some( predicate, thisArg ) {\n\t\t\tvar bool;\n\t\t\tvar i;\n\t\t\tif ( this !== tuple ) { // eslint-disable-line no-invalid-this\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\t\t\tif ( !isFunction( predicate ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', predicate ) );\n\t\t\t}\n\t\t\tfor ( i = 0; i < nfields; i++ ) {\n\t\t\t\tbool = predicate.call( thisArg, tuple[ i ], i, fields[ indices[i] ], tuple );\n\t\t\t\tif ( bool ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t* Sorts a tuple in-place.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   The comparison function is provided two tuple elements, `a` and `b`, per invocation, and its return value determines the sort order as follows:\n\t\t*\n\t\t*     -   If the comparison function returns a value **less** than zero, then the function sorts `a` to an index lower than `b` (i.e., `a` should come **before** `b`).\n\t\t*     -   If the comparison function returns a value **greater** than zero, then the function sorts `a` to an index higher than `b` (i.e., `b` should come **before** `a`).\n\t\t*     -   If the comparison function returns **zero**, then the relative order of `a` and `b` _should_ remain unchanged.\n\t\t*\n\t\t* -   Invoking this method does **not** affect tuple field assignments.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @param {Function} [compareFunction] - function which specifies the sort order\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @throws {TypeError} first argument must be a function\n\t\t* @returns {TypedArray} sorted tuple\n\t\t*/\n\t\tfunction sort( compareFunction ) {\n\t\t\tvar clbk;\n\t\t\tvar tmp;\n\t\t\tvar i;\n\t\t\tvar j;\n\t\t\tvar k;\n\t\t\tvar v;\n\t\t\tif ( this !== tuple ) { // eslint-disable-line no-invalid-this\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\t\t\tif ( arguments.length ) {\n\t\t\t\tif ( !isFunction( compareFunction ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', compareFunction ) );\n\t\t\t\t}\n\t\t\t\tclbk = compareFunction;\n\t\t\t} else {\n\t\t\t\tclbk = ascending;\n\t\t\t}\n\t\t\tindices.sort( wrapper );\n\n\t\t\t// Create a temporary indices array which we'll reorder as we rearrange the tuple elements:\n\t\t\ttmp = indices.slice();\n\n\t\t\t// Rearrange tuple elements according to the rearranged indices (note: every \"move\" moves a tuple element to its desired position with runtime complexity O(N))...\n\t\t\tfor ( i = 0; i < nfields; i++ ) {\n\t\t\t\t// Check if we need to move a tuple element:\n\t\t\t\tif ( tmp[ i ] !== i ) {\n\t\t\t\t\tv = tuple[ i ];\n\t\t\t\t\tj = i;\n\t\t\t\t\tk = tmp[ j ];\n\n\t\t\t\t\t// Follow \"cycles\", stopping once we are back at index `i`...\n\t\t\t\t\twhile ( k !== i ) {\n\t\t\t\t\t\ttuple[ j ] = tuple[ k ];\n\t\t\t\t\t\ttmp[ j ] = j;\n\t\t\t\t\t\tj = k;\n\t\t\t\t\t\tk = tmp[ j ];\n\t\t\t\t\t}\n\t\t\t\t\ttuple[ j ] = v;\n\t\t\t\t\ttmp[ j ] = j;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tuple;\n\n\t\t\t/**\n\t\t\t* Wraps a comparison function to allow sorting the internal indices array rather than the tuple directly.\n\t\t\t*\n\t\t\t* @private\n\t\t\t* @param {NonNegativeInteger} ia - first index\n\t\t\t* @param {NonNegativeInteger} ib - second index\n\t\t\t* @returns {*} value specifying the sort order\n\t\t\t*/\n\t\t\tfunction wrapper( ia, ib ) {\n\t\t\t\tvar a = tuple[ indices[ ia ] ];\n\t\t\t\tvar b = tuple[ indices[ ib ] ];\n\t\t\t\treturn clbk( a, b );\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t* Creates a new tuple over the same underlying `ArrayBuffer` and with the same underlying data type as the host tuple.\n\t\t*\n\t\t* ## Notes\n\t\t*\n\t\t* -   If the function is unable to resolve indices to a non-empty tuple subsequence, the function returns `null`.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @param {integer} [begin=0] - start element index (inclusive)\n\t\t* @param {integer} [end=tuple.length] - end element index (exclusive)\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @throws {TypeError} first argument must be an integer\n\t\t* @throws {TypeError} second argument must be an integer\n\t\t* @returns {(TypedArray|null)} new tuple\n\t\t*/\n\t\tfunction subtuple( begin, end ) {\n\t\t\tvar f;\n\t\t\tvar i;\n\t\t\tvar j;\n\t\t\tvar k;\n\n\t\t\tif ( this !== tuple ) { // eslint-disable-line no-invalid-this\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\t\t\tif ( arguments.length === 0 ) {\n\t\t\t\treturn namedtypedtuple( tuple.buffer, tuple.byteOffset, dtype );\n\t\t\t}\n\t\t\ti = begin;\n\t\t\tif ( !isInteger( i ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an integer. Value: `%s`.', begin ) );\n\t\t\t}\n\t\t\tif ( i < 0 ) {\n\t\t\t\ti = nfields + i;\n\t\t\t\tif ( i < 0 ) {\n\t\t\t\t\ti = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( arguments.length === 1 ) {\n\t\t\t\tj = nfields;\n\t\t\t} else {\n\t\t\t\tj = end;\n\t\t\t\tif ( !isInteger( j ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', end ) );\n\t\t\t\t}\n\t\t\t\tif ( j < 0 ) {\n\t\t\t\t\tj = nfields + j;\n\t\t\t\t\tif ( j < 0 ) {\n\t\t\t\t\t\tj = 0;\n\t\t\t\t\t}\n\t\t\t\t} else if ( j > nfields ) {\n\t\t\t\t\tj = nfields;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( i >= j ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tf = [];\n\t\t\tfor ( k = i; k < j; k++ ) {\n\t\t\t\tf.push( fields[ indices[k] ] );\n\t\t\t}\n\t\t\treturn factory( f, opts )( tuple.buffer, tuple.byteOffset+(i*tuple.BYTES_PER_ELEMENT), dtype );\n\t\t}\n\n\t\t/**\n\t\t* Serializes a tuple as JSON.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @returns {JSON} tuple JSON representation\n\t\t*/\n\t\tfunction toJSON() {\n\t\t\tvar out;\n\t\t\tvar i;\n\t\t\tif ( this !== tuple ) { // eslint-disable-line no-invalid-this\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\t\t\tout = {};\n\t\t\tfor ( i = 0; i < nfields; i++ ) {\n\t\t\t\tout[ fields[i] ] = tuple[ indices[i] ];\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\n\t\t/**\n\t\t* Serializes a tuple as a locale-specific string.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @param {(string|Array<string>)} [locales] - locale identifier(s)\n\t\t* @param {Object} [options] - configuration options\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @throws {TypeError} first argument must be a string or an array of strings\n\t\t* @throws {TypeError} options argument must be an object\n\t\t* @returns {string} string representation\n\t\t*/\n\t\tfunction toLocaleString( locales, options ) {\n\t\t\tvar loc;\n\t\t\tvar out;\n\t\t\tvar o;\n\t\t\tvar i;\n\n\t\t\tif ( this !== tuple ) { // eslint-disable-line no-invalid-this\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\t\t\tif ( arguments.length === 0 ) {\n\t\t\t\tloc = [];\n\t\t\t} else if ( isString( locales ) || isStringArray( locales ) ) {\n\t\t\t\tloc = locales;\n\t\t\t} else {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string or an array of strings. Value: `%s`.', locales ) );\n\t\t\t}\n\t\t\tif ( arguments.length < 2 ) {\n\t\t\t\to = {};\n\t\t\t} else if ( isObject( options ) ) {\n\t\t\t\to = options;\n\t\t\t} else {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t\t\t}\n\t\t\tout = opts.name.toLocaleString( loc, o ) + '(';\n\t\t\tfor ( i = 0; i < nfields; i++ ) {\n\t\t\t\tout += fields[ i ].toLocaleString( loc, o );\n\t\t\t\tout += '=';\n\t\t\t\tout += tuple[ indices[ i ] ].toLocaleString( loc, o );\n\t\t\t\tif ( i < nfields-1 ) {\n\t\t\t\t\tout += ', ';\n\t\t\t\t}\n\t\t\t}\n\t\t\tout += ')';\n\t\t\treturn out;\n\t\t}\n\n\t\t/**\n\t\t* Serializes a tuple as a string.\n\t\t*\n\t\t* @private\n\t\t* @memberof tuple\n\t\t* @throws {TypeError} `this` must be the host tuple\n\t\t* @returns {string} tuple string representation\n\t\t*/\n\t\tfunction toString() {\n\t\t\tvar out;\n\t\t\tvar i;\n\t\t\tif ( this !== tuple ) { // eslint-disable-line no-invalid-this\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not host tuple.' );\n\t\t\t}\n\t\t\tout = opts.name + '(';\n\t\t\tfor ( i = 0; i < nfields; i++ ) {\n\t\t\t\tout += fields[ i ];\n\t\t\t\tout += '=';\n\t\t\t\tout += tuple[ indices[ i ] ];\n\t\t\t\tif ( i < nfields-1 ) {\n\t\t\t\t\tout += ', ';\n\t\t\t\t}\n\t\t\t}\n\t\t\tout += ')';\n\t\t\treturn out;\n\t\t}\n\t}\n\n\t// Note: keep the following methods in alphabetical order...\n\n\t/**\n\t* Creates a new tuple from an array-like object or an iterable.\n\t*\n\t* @private\n\t* @name from\n\t* @memberof namedtypedtuple\n\t* @type {Function}\n\t* @param {(ArrayLikeObject|Iterable)} src - array-like object or iterable\n\t* @param {Function} [clbk] - callback to invoke for each source element\n\t* @param {*} [thisArg] - callback execution context\n\t* @throws {TypeError} `this` must be the host tuple factory\n\t* @throws {TypeError} first argument must be an array-like object or an iterable\n\t* @throws {RangeError} source must be compatible with tuple length\n\t* @throws {TypeError} second argument must be a function\n\t* @returns {TypedArray} new tuple\n\t*/\n\tdefineProperty( namedtypedtuple, 'from', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': function from( src ) { // eslint-disable-line no-restricted-syntax\n\t\t\tvar thisArg;\n\t\t\tvar nargs;\n\t\t\tvar tuple;\n\t\t\tvar clbk;\n\t\t\tvar tmp;\n\t\t\tvar it;\n\t\t\tvar i;\n\t\t\tif ( this !== namedtypedtuple ) {\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not the host tuple factory.' );\n\t\t\t}\n\t\t\tnargs = arguments.length;\n\t\t\tif ( nargs > 1 ) {\n\t\t\t\tclbk = arguments[ 1 ];\n\t\t\t\tif ( !isFunction( clbk ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t\t\t}\n\t\t\t\tif ( nargs > 2 ) {\n\t\t\t\t\tthisArg = arguments[ 2 ];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( isCollection( src ) ) {\n\t\t\t\tif ( src.length !== nfields ) {\n\t\t\t\t\tthrow new RangeError( format( 'invalid argument. Source is incompatible with the number of tuple fields. Number of fields: `%u`. Source length: `%u`.', nfields, src.length ) );\n\t\t\t\t}\n\t\t\t\ttuple = namedtypedtuple( nfields, opts.dtype );\n\t\t\t\tif ( clbk ) {\n\t\t\t\t\tfor ( i = 0; i < nfields; i++ ) {\n\t\t\t\t\t\ttuple[ i ] = clbk.call( thisArg, src[ i ], i, fields[ i ] );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor ( i = 0; i < nfields; i++ ) {\n\t\t\t\t\t\ttuple[ i ] = src[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if ( isObject( src ) && HAS_ITERATOR_SYMBOL && isFunction( src[ ITERATOR_SYMBOL ] ) ) {\n\t\t\t\tit = src[ ITERATOR_SYMBOL ]();\n\t\t\t\tif ( !isFunction( it.next ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n\t\t\t\t}\n\t\t\t\tif ( clbk ) {\n\t\t\t\t\ttmp = fromIteratorMap( fields, it, clbk, thisArg );\n\t\t\t\t} else {\n\t\t\t\t\ttmp = fromIterator( it );\n\t\t\t\t}\n\t\t\t\ttuple = namedtypedtuple( tmp, opts.dtype );\n\t\t\t} else {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object or an iterable. Value: `%s`.', src ) );\n\t\t\t}\n\t\t\treturn tuple;\n\t\t}\n\t});\n\n\t/**\n\t* Creates a new tuple from an object containing tuple fields.\n\t*\n\t* @private\n\t* @name fromObject\n\t* @memberof namedtypedtuple\n\t* @type {Function}\n\t* @param {Object} obj - source object\n\t* @param {Function} [clbk] - callback to invoke for each source object tuple field\n\t* @param {*} [thisArg] - callback execution context\n\t* @throws {TypeError} `this` must be the host tuple factory\n\t* @throws {TypeError} first argument must be an object\n\t* @throws {TypeError} second argument must be a function\n\t* @returns {TypedArray} new tuple\n\t*/\n\tdefineProperty( namedtypedtuple, 'fromObject', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': function fromObject( obj ) { // eslint-disable-line no-restricted-syntax\n\t\t\tvar thisArg;\n\t\t\tvar nargs;\n\t\t\tvar tuple;\n\t\t\tvar clbk;\n\t\t\tvar f;\n\t\t\tvar i;\n\t\t\tif ( this !== namedtypedtuple ) {\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not the host tuple factory.' );\n\t\t\t}\n\t\t\tif ( obj === null || typeof obj !== 'object' ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t\t\t}\n\t\t\tnargs = arguments.length;\n\t\t\tif ( nargs > 1 ) {\n\t\t\t\tclbk = arguments[ 1 ];\n\t\t\t\tif ( !isFunction( clbk ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', clbk ) );\n\t\t\t\t}\n\t\t\t\tif ( nargs > 2 ) {\n\t\t\t\t\tthisArg = arguments[ 2 ];\n\t\t\t\t}\n\t\t\t}\n\t\t\ttuple = namedtypedtuple( nfields, opts.dtype );\n\t\t\tif ( clbk ) {\n\t\t\t\tfor ( i = 0; i < nfields; i++ ) {\n\t\t\t\t\tf = fields[ i ];\n\t\t\t\t\tif ( hasOwnProp( obj, f ) ) {\n\t\t\t\t\t\ttuple[ i ] = clbk.call( thisArg, obj[ f ], f );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i = 0; i < nfields; i++ ) {\n\t\t\t\t\tf = fields[ i ];\n\t\t\t\t\tif ( hasOwnProp( obj, f ) ) {\n\t\t\t\t\t\ttuple[ i ] = obj[ f ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tuple;\n\t\t}\n\t});\n\n\t/**\n\t* Creates a new tuple from a variable number of arguments.\n\t*\n\t* @private\n\t* @name of\n\t* @memberof namedtypedtuple\n\t* @type {Function}\n\t* @param {...number} element - tuple elements\n\t* @throws {TypeError} `this` must be the host tuple factory\n\t* @throws {RangeError} incompatible number of arguments\n\t* @returns {TypedArray} new tuple\n\t*/\n\tdefineProperty( namedtypedtuple, 'of', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': function of() { // eslint-disable-line no-restricted-syntax\n\t\t\tvar args;\n\t\t\tvar i;\n\t\t\tif ( this !== namedtypedtuple ) {\n\t\t\t\tthrow new TypeError( 'invalid invocation. `this` is not the host tuple factory.' );\n\t\t\t}\n\t\t\tif ( arguments.length !== nfields ) {\n\t\t\t\tthrow new RangeError( format( 'invalid invocation. Number of arguments is incompatible with the number of tuple fields. Number of fields: `%u`. Number of arguments: `%u`.', nfields, arguments.length ) );\n\t\t\t}\n\t\t\targs = [];\n\t\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\t\targs.push( arguments[ i ] );\n\t\t\t}\n\t\t\treturn namedtypedtuple( args );\n\t\t}\n\t});\n\n\treturn namedtypedtuple;\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert/has-own-property';\n\n\n// MAIN //\n\n/**\n* Tests if an array contains distinct elements.\n*\n* @private\n* @param {Array} arr - input array\n* @returns {boolean} boolean indicating if an array contains distinct elements\n*/\nfunction hasDistinctElements( arr ) {\n\tvar obj;\n\tvar i;\n\n\tobj = {};\n\tfor ( i = 0; i < arr.length; i++ ) {\n\t\tif ( hasOwnProp( obj, arr[ i ] ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tobj[ arr[i] ] = true;\n\t}\n\treturn true;\n}\n\n\n// EXPORTS //\n\nexport default hasDistinctElements;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {StringArray} fields - tuple fields\n* @param {Object} it - iterator\n* @param {Function} clbk - callback to invoke for each iterated value\n* @param {*} thisArg - invocation context\n* @returns {Array} output array\n*/\nfunction fromIteratorMap( fields, it, clbk, thisArg ) {\n\tvar out;\n\tvar v;\n\tvar i;\n\n\tout = [];\n\ti = -1;\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\ti += 1;\n\t\tout.push( clbk.call( thisArg, v.value, i, fields[ i ] ) );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIteratorMap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns an array of iterated values.\n*\n* @private\n* @param {Object} it - iterator\n* @returns {Array} output array\n*/\nfunction fromIterator( it ) {\n\tvar out;\n\tvar v;\n\n\tout = [];\n\twhile ( true ) {\n\t\tv = it.next();\n\t\tif ( v.done ) {\n\t\t\tbreak;\n\t\t}\n\t\tout.push( v.value );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default fromIterator;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-restricted-syntax, no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from '@stdlib/utils/define-nonenumerable-read-only-accessor';\nimport iteratorSymbol from '@stdlib/symbol/iterator';\n\n\n// MAIN //\n\n/**\n* Stack constructor.\n*\n* @constructor\n* @returns {Stack} stack instance\n*\n* @example\n* var s = new Stack();\n*\n* // Add values to the stack:\n* s.push( 'foo' ).push( 'bar' );\n*\n* // Remove the top value:\n* var v = s.pop();\n* // returns 'bar'\n*\n* // Add a new value to the stack:\n* s.push( 'beep' );\n*\n* // Remove the top value:\n* v = s.pop();\n* // returns 'beep'\n*/\nfunction Stack() {\n\tif ( !(this instanceof Stack) ) {\n\t\treturn new Stack();\n\t}\n\t// Use a dynamic array as insertion and deletion is O(1) amortized:\n\tthis._buffer = [];\n\treturn this;\n}\n\n/**\n* Clears the stack.\n*\n* @name clear\n* @memberof Stack.prototype\n* @type {Function}\n* @returns {Stack} stack instance\n*\n* @example\n* var s = new Stack();\n*\n* // Add values to the stack:\n* s.push( 'foo' ).push( 'bar' );\n*\n* // Peek at the top value:\n* var v = s.first();\n* // returns 'bar'\n*\n* // Examine the stack length:\n* var len = s.length;\n* // returns 2\n*\n* // Clear all stack items:\n* s.clear();\n*\n* // Peek at the top value:\n* v = s.first();\n* // returns undefined\n*\n* // Examine the stack length:\n* len = s.length;\n* // returns 0\n*/\nsetReadOnly( Stack.prototype, 'clear', function clear() {\n\tthis._buffer.length = 0;\n\treturn this;\n});\n\n/**\n* Returns the top value (i.e., the value which is \"first-out\").\n*\n* @name first\n* @memberof Stack.prototype\n* @type {Function}\n* @returns {(*|void)} top value\n*\n* @example\n* var s = new Stack();\n*\n* // Add values to the stack:\n* s.push( 'foo' ).push( 'bar' );\n*\n* // Peek at the top value:\n* var v = s.first();\n* // returns 'bar'\n*/\nsetReadOnly( Stack.prototype, 'first', function first() {\n\tif ( this._buffer.length ) {\n\t\treturn this._buffer[ this._buffer.length-1 ];\n\t}\n});\n\n/**\n* Returns an iterator for iterating over a stack.\n*\n* ## Notes\n*\n* -   In order to prevent confusion arising from stack mutation during iteration, a returned iterator **always** iterates over a stack \"snapshot\", which is defined as the list of stack elements at the time of this method's invocation.\n*\n* @name iterator\n* @memberof Stack.prototype\n* @type {Function}\n* @returns {Iterator} iterator\n*\n* @example\n* var s = new Stack();\n*\n* // Add values to the stack:\n* s.push( 'foo' ).push( 'bar' );\n*\n* // Create an iterator:\n* var it = s.iterator();\n*\n* // Iterate over the stack...\n* var v = it.next().value;\n* // returns 'bar'\n*\n* v = it.next().value;\n* // returns 'foo'\n*\n* var bool = it.next().done;\n* // returns true\n*/\nsetReadOnly( Stack.prototype, 'iterator', function iterator() {\n\tvar values;\n\tvar iter;\n\tvar self;\n\tvar FLG;\n\tvar i;\n\n\tself = this;\n\n\t// Initialize the iteration index:\n\ti = this._buffer.length;\n\n\t// Create a copy of stack values (necessary in order to \"snapshot\" the stack; otherwise, values could come and go between calls to `next`):\n\tvalues = this._buffer.slice();\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\ti -= 1;\n\t\tif ( FLG || i < 0 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': values[ i ],\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn self.iterator();\n\t}\n});\n\n/**\n* Returns the bottom stack value (i.e., the value which is currently \"last-out\").\n*\n* @name last\n* @memberof Stack.prototype\n* @type {Function}\n* @returns {(*|void)} bottom stack value\n*\n* @example\n* var s = new Stack();\n*\n* // Add values to the stack:\n* s.push( 'foo' ).push( 'bar' );\n*\n* // Peek at the bottom value:\n* var v = s.last();\n* // returns 'foo'\n*/\nsetReadOnly( Stack.prototype, 'last', function last() {\n\tif ( this._buffer.length ) {\n\t\treturn this._buffer[ 0 ];\n\t}\n});\n\n/**\n* Stack length.\n*\n* @name length\n* @memberof Stack.prototype\n* @type {NonNegativeInteger}\n*\n* @example\n* var s = new Stack();\n*\n* // Examine the initial stack length:\n* var len = s.length;\n* // returns 0\n*\n* // Add values to the stack:\n* s.push( 'foo' ).push( 'bar' );\n*\n* // Retrieve the current stack length:\n* len = s.length;\n* // returns 2\n*/\nsetReadOnlyAccessor( Stack.prototype, 'length', function get() {\n\treturn this._buffer.length;\n});\n\n/**\n* Removes a value from the stack.\n*\n* @name pop\n* @memberof Stack.prototype\n* @type {Function}\n* @returns {(*|void)} removed value\n*\n* @example\n* var s = new Stack();\n*\n* // Add values to the stack:\n* s.push( 'foo' ).push( 'bar' );\n*\n* // Remove the top value:\n* var v = s.pop();\n* // returns 'bar'\n*\n* // Add a new value to the stack:\n* s.push( 'beep' );\n*\n* // Remove the top value:\n* v = s.pop();\n* // returns 'beep'\n*/\nsetReadOnly( Stack.prototype, 'pop', function pop() {\n\tif ( this._buffer.length ) {\n\t\treturn this._buffer.pop();\n\t}\n});\n\n/**\n* Adds a value to the stack.\n*\n* @name push\n* @memberof Stack.prototype\n* @type {Function}\n* @returns {Stack} stack instance\n*\n* @example\n* var s = new Stack();\n*\n* // Add values to the stack:\n* s.push( 'foo' ).push( 'bar' );\n*\n* // Remove the top value:\n* var v = s.pop();\n* // returns 'bar'\n*\n* // Add a new value to the stack:\n* s.push( 'beep' );\n*\n* // Remove the top value:\n* v = s.pop();\n* // returns 'beep'\n*/\nsetReadOnly( Stack.prototype, 'push', function push( value ) {\n\tthis._buffer.push( value );\n\treturn this;\n});\n\n/**\n* Returns an array of stack values.\n*\n* ## Notes\n*\n* -   Why reverse insertion order? Pros and cons to either order, but reverse insertion order mirrors iterator order. For example, we can use the ES6/ES2015+ spread operator along with the iterator to return stack values.\n*\n*     ```text\n*     arr = [...s.iterator()]\n*     ```\n*\n*     One might (as is the opinion here) consider parity of array serialization and iterator order to be a reasonable design goal.\n*\n* @name toArray\n* @memberof Stack.prototype\n* @type {Function}\n* @returns {Array} stack values\n*\n* @example\n* var s = new Stack();\n*\n* // Add values to the stack:\n* s.push( 'foo' ).push( 'bar' );\n*\n* // Get an array of stack values:\n* var vals = s.toArray();\n* // returns [ 'bar', 'foo' ]\n*/\nsetReadOnly( Stack.prototype, 'toArray', function toArray() {\n\tvar out;\n\tvar i;\n\tout = [];\n\tfor ( i = this._buffer.length-1; i >= 0; i-- ) {\n\t\tout.push( this._buffer[ i ] );\n\t}\n\treturn out;\n});\n\n/**\n* Serializes a stack as JSON.\n*\n* ## Notes\n*\n* -   `JSON.stringify()` implicitly calls this method when stringifying a `Stack` instance.\n*\n* @name toJSON\n* @memberof Stack.prototype\n* @type {Function}\n* @returns {Object} serialized stack\n*\n* @example\n* var s = new Stack();\n*\n* // Add values to the stack:\n* s.push( 'foo' ).push( 'bar' );\n*\n* // Serialize to JSON:\n* var o = s.toJSON();\n* // returns { 'type': 'stack', 'data': [ 'bar', 'foo' ] }\n*/\nsetReadOnly( Stack.prototype, 'toJSON', function toJSON() {\n\tvar out = {};\n\tout.type = 'stack';\n\tout.data = this.toArray();\n\treturn out;\n});\n\n\n// EXPORTS //\n\nexport default Stack;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n/*\n* The following modules are intentionally not exported: tools\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils/define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name CircularBuffer\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/dstructs/circular-buffer}\n*/\nimport CircularBuffer from './../circular-buffer';\nsetReadOnly( ns, 'CircularBuffer', CircularBuffer );\n\n/**\n* @name CompactAdjacencyMatrix\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/dstructs/compact-adjacency-matrix}\n*/\nimport CompactAdjacencyMatrix from './../compact-adjacency-matrix';\nsetReadOnly( ns, 'CompactAdjacencyMatrix', CompactAdjacencyMatrix );\n\n/**\n* @name DoublyLinkedList\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/dstructs/doubly-linked-list}\n*/\nimport DoublyLinkedList from './../doubly-linked-list';\nsetReadOnly( ns, 'DoublyLinkedList', DoublyLinkedList );\n\n/**\n* @name FIFO\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/dstructs/fifo}\n*/\nimport FIFO from './../fifo';\nsetReadOnly( ns, 'FIFO', FIFO );\n\n/**\n* @name LinkedList\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/dstructs/linked-list}\n*/\nimport LinkedList from './../linked-list';\nsetReadOnly( ns, 'LinkedList', LinkedList );\n\n/**\n* @name namedtypedtuple\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/dstructs/named-typed-tuple}\n*/\nimport namedtypedtuple from './../named-typed-tuple';\nsetReadOnly( ns, 'namedtypedtuple', namedtypedtuple );\n\n/**\n* @name Stack\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/dstructs/stack}\n*/\nimport Stack from './../stack';\nsetReadOnly( ns, 'Stack', Stack );\n\n\n// EXPORTS //\n\nexport default ns;\n"],"names":["CircularBuffer","buffer","buf","i","this","isPositiveInteger","push","isCollection","TypeError","format","_buffer","arraylike2object","_length","length","_count","_i","isSet","value","Boolean","bitValue","setReadOnly","prototype","setReadOnlyAccessor","niters","iter","self","FLG","N","n","arguments","isNonNegativeInteger","MAX_ITERATIONS","done","accessors","data","iteratorSymbol","iterator","set","get","v","out","k","toArray","HAS_ITERATOR_SYMBOL","hasIteratorSymbolSupport","NBITS","Int32Array","BYTES_PER_ELEMENT","CompactAdjacencyMatrix","_N","_M","ceil","Node","defineProperty","configurable","enumerable","_next","_prev","writable","DoublyLinkedList","_first","_last","next","prev","FIFO","LinkedList","contains","arr","list","thisArg","nargs","edges","clbk","adj","tmp","len","j","isFunction","isArrayLikeObject","call","addEdge","isObject","ITERATOR_SYMBOL","it","z","fromIteratorAdjListMap","fromIteratorAdjList","Error","edge","fromIteratorEdgesMap","fromIteratorEdges","bucket","bit","idx","floor","RangeError","_loc","setBit","deg","clearBit","marks","s","Int8Array","visit","grev","err","node","location","loc","unshift","direction","values","dir","inc","shift","pop","DTYPES","dtypes","ascending","a","b","RESERVED_PROPS","propertiesIn","factory","names","options","nfields","fields","opts","isStringArray","obj","hasOwnProp","hasDistinctElements","slice","dtype","name","isString","validate","namedtypedtuple","indices","tuple","typedarray","isArrayBuffer","getDtype","setNonEnumerableReadWriteAccessor","getter","setter","setNonEnumerableProperty","setNonEnumerableReadOnlyAccessor","entries","predicate","searchElement","isInteger","f","fcn","ind","key","keys","acc","begin","end","compareFunction","sort","ia","ib","byteOffset","locales","o","toLocaleString","src","fromIteratorMap","fromIterator","args","Stack","ns"],"mappings":"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"}